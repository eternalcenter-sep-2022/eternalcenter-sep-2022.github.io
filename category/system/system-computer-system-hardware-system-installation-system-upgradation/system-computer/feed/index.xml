<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>System Computer (系统电脑) &#8211; Eternal Center</title>
	<atom:link href="https://eternalcenter-sep-2022.github.io/category/system/system-computer-system-hardware-system-installation-system-upgradation/system-computer/feed/" rel="self" type="application/rss+xml" />
	<link>https://eternalcenter-sep-2022.github.io/</link>
	<description></description>
	<lastBuildDate>Tue, 23 Aug 2022 17:25:25 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	
	<item>
		<title>[内容] pip 工具的安装 （MacBook Air 版）</title>
		<link>https://eternalcenter-sep-2022.github.io/macbook-air-pip/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 24 May 2021 06:17:53 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[Django]]></category>
		<category><![CDATA[Django Foundation (基础)]]></category>
		<category><![CDATA[Django Model Layer (模型层)]]></category>
		<category><![CDATA[Django Template Layer (模版层)]]></category>
		<category><![CDATA[Django View Layer (视图层)]]></category>
		<category><![CDATA[Language (语言)]]></category>
		<category><![CDATA[Python]]></category>
		<category><![CDATA[Python Basic (基础)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Computer (系统电脑)]]></category>
		<category><![CDATA[System Computer & System Hardware & System Installation & System Upgradation (系统电脑 & 系统硬件 & 系统安装 & 系统升级)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=14337</guid>

					<description><![CDATA[内容一：安装 pip2 1.1 下载 pip2 1.2 安装 pip2 1.3 删除 pip2 1.4 显示安装的 pip2 1.4.1 显示在 python 里有没有 pip 安装包 （补充：这里以 Python 版本是 2.7 为例） 1.4.2 显示有没有 pip2 命令 1.4.3 升级 pip2 内容二：安装 pip3 2.1 准备安装 pip3 所需的环境 2.1.1 安装 python3 2.1.1.1 输入 python3 命令 2.1.1.2 在弹出的对话框里安装 python3 （步骤略） 2.1.2 安装 xcode 2.1.2.1 输入 xcode-select &#8230; <p class="link-more"><a href="https://eternalcenter-sep-2022.github.io/macbook-air-pip/" class="more-link">Continue reading<span class="screen-reader-text"> "[内容] pip 工具的安装 （MacBook Air 版）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3 id="内容一-安装-pip2-1-1-下载-pip2">内容一：安装 pip2</h3>



<h4 id="内容一-安装-pip2-1-1-下载-pip2">1.1 下载 pip2</h4>



<pre class="wp-block-code"><code>$ curl 'https://bootstrap.pypa.io/pip/2.7/get-pip.py' &gt; get-pip.py
</code></pre>



<h4 id="1-2-安装-pip2">1.2 安装 pip2</h4>



<pre class="wp-block-code"><code>$ sudo python get-pip.py</code></pre>



<h4 id="1-3-删除-pip2">1.3 删除 pip2</h4>



<pre class="wp-block-code"><code>$ rm get-pip.py</code></pre>



<h4 id="1-4-显示安装的-pip2-1-4-1-显示在-python-里有没有-pip-安装包">1.4 显示安装的 pip2</h4>



<h5 id="1-4-显示安装的-pip2-1-4-1-显示在-python-里有没有-pip-安装包">1.4.1 显示在 python 里有没有 pip 安装包</h5>



<pre class="wp-block-code"><code>$ ls /Library/Python/2.7/site-packages/</code></pre>



<p>（补充：这里以 Python 版本是 2.7 为例）</p>



<h5 id="1-4-2-显示有没有-pip2-命令">1.4.2 显示有没有 pip2 命令</h5>



<pre class="wp-block-code"><code>$ which pip2</code></pre>



<h5 id="1-4-3-升级-pip2">1.4.3 升级 pip2</h5>



<pre class="wp-block-code"><code>$ sudo pip2 install --upgrade pip</code></pre>



<h3 id="内容二-安装-pip3-2-1-准备安装-pip3-所需的环境-2-1-1-安装-python3-2-1-1-1-输入-python3-命令">内容二：安装 pip3</h3>



<h4 id="内容二-安装-pip3-2-1-准备安装-pip3-所需的环境-2-1-1-安装-python3-2-1-1-1-输入-python3-命令">2.1 准备安装 pip3 所需的环境</h4>



<h5 id="内容二-安装-pip3-2-1-准备安装-pip3-所需的环境-2-1-1-安装-python3-2-1-1-1-输入-python3-命令">2.1.1 安装 python3</h5>



<h5 id="内容二-安装-pip3-2-1-准备安装-pip3-所需的环境-2-1-1-安装-python3-2-1-1-1-输入-python3-命令">2.1.1.1 输入 python3 命令</h5>



<pre class="wp-block-code"><code>$ python3</code></pre>



<h5 id="2-1-1-2-在弹出的对话框里安装-python3">2.1.1.2 在弹出的对话框里安装 python3</h5>



<p>（步骤略）</p>



<h5 id="2-1-2-安装-xcode-2-1-2-1-输入-xcode-select-install-命令">2.1.2 安装 xcode</h5>



<h5 id="2-1-2-安装-xcode-2-1-2-1-输入-xcode-select-install-命令">2.1.2.1 输入 xcode-select &#8211;install 命令</h5>



<pre class="wp-block-code"><code>$ xcode-select --install</code></pre>



<h5 id="2-1-2-2-在弹出的对话框里安装-xcode">2.1.2.2 在弹出的对话框里安装 xcode</h5>



<p>（步骤略）</p>



<h4 id="2-2-安装-pip3-2-2-1-下载-pip3">2.2 安装 pip3</h4>



<h5 id="2-2-安装-pip3-2-2-1-下载-pip3">2.2.1 下载 pip3</h5>



<pre class="wp-block-code"><code>$ curl 'https://bootstrap.pypa.io/pip/get-pip.py' &gt; get-pip.py</code></pre>



<h5 id="2-2-2-安装-pip3">2.2.2 安装 pip3</h5>



<pre class="wp-block-code"><code>$ sudo python get-pip.py</code></pre>



<h5 id="2-2-3-删除-pip3">2.2.3 删除 pip3</h5>



<pre class="wp-block-code"><code>$ rm get-pip.py</code></pre>



<h5 id="2-2-4-显示安装的-pip3-2-2-4-1-显示在-python-里有没有-pip-安装包">2.2.4 显示安装的 pip3</h5>



<h5 id="2-2-4-显示安装的-pip3-2-2-4-1-显示在-python-里有没有-pip-安装包">2.2.4.1 显示在 python 里有没有 pip 安装包</h5>



<pre class="wp-block-code"><code>$ ls /Library/Python/3.8/site-packages/</code></pre>



<p>（补充：这里以 Python 版本是 3.8 为例）</p>



<h5 id="2-2-4-2-显示有没有-pip3-命令">2.2.4.2 显示有没有 pip3 命令</h5>



<pre class="wp-block-code"><code>$ which pip3</code></pre>



<h5 id="2-2-4-3-升级-pip3">2.2.4.3 升级 pip3</h5>



<pre class="wp-block-code"><code>$ sudo pip3 install --upgrade pip</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] 远程虚拟化平台的搭建</title>
		<link>https://eternalcenter-sep-2022.github.io/remote-virtual-platform/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 26 Sep 2020 10:10:37 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[KVM]]></category>
		<category><![CDATA[Other Service (其它服务)]]></category>
		<category><![CDATA[Service (服务)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Computer (系统电脑)]]></category>
		<category><![CDATA[System Computer & System Hardware & System Installation & System Upgradation (系统电脑 & 系统硬件 & 系统安装 & 系统升级)]]></category>
		<category><![CDATA[Virtualization (虚拟化)]]></category>
		<category><![CDATA[VNC]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=10587</guid>

					<description><![CDATA[步骤一：规划拓扑 1.1 电脑列表 1) 一台可以联接公网的电脑2) 一个 CentOS 8.2 系统的安装 U 盘3) 一台可以联接公网并且有公网 IP 地址的 VPS4) 一个可以联接公网并使用 SSH 和 VNC 的客户端 1.2 服务器列表简介 1) 电脑通过 SSH 建立联接到 VPS 的隧道，此操作会占用 VPS 的一个端口2) VPS 通过 SSH 将联接电脑的隧道端口映射到一个新的端口3) 客户端通过 SSH 联接到 VPS 映射出来的新端口，通过 SSH 或远程桌面使用虚拟化平台4) 客户端和电脑如果在同一内网里则可以通过 Samba 互传数据 步骤二：CentOS 8.2 系统的安装 U 盘给电脑安装系统 （只在电脑上执行以下步骤）（步骤略） （补充：安装系统时可选择以下选项：1) 系统起动方式：BIOS2) Keyboard：English(US)3) Language Support：English(United &#8230; <p class="link-more"><a href="https://eternalcenter-sep-2022.github.io/remote-virtual-platform/" class="more-link">Continue reading<span class="screen-reader-text"> "[步骤] 远程虚拟化平台的搭建"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3 id="步骤一-规划拓扑1-1-电脑列表">步骤一：规划拓扑</h3>



<h4 id="步骤一-规划拓扑1-1-电脑列表">1.1 电脑列表</h4>



<p>1) 一台可以联接公网的电脑<br>2) 一个 CentOS 8.2 系统的安装 U 盘<br>3) 一台可以联接公网并且有公网 IP 地址的 VPS<br>4) 一个可以联接公网并使用 SSH 和 VNC 的客户端</p>



<h4 id="1-2-服务器列表简介">1.2 服务器列表简介</h4>



<p>1) 电脑通过 SSH 建立联接到 VPS 的隧道，此操作会占用 VPS 的一个端口<br>2) VPS 通过 SSH 将联接电脑的隧道端口映射到一个新的端口<br>3) 客户端通过 SSH 联接到 VPS 映射出来的新端口，通过 SSH 或远程桌面使用虚拟化平台<br>4) 客户端和电脑如果在同一内网里则可以通过 Samba 互传数据</p>



<h3 id="步骤二-centos-8-2-系统的安装-u-盘给电脑安装系统">步骤二：CentOS 8.2 系统的安装 U 盘给电脑安装系统</h3>



<p>（只在电脑上执行以下步骤）<br>（步骤略）</p>



<p>（<br>补充：<br>安装系统时可选择以下选项：<br>1) 系统起动方式：BIOS<br>2) Keyboard：English(US)<br>3) Language Support：English(United States)<br>4) Time &amp; Date：Asia/ShangHai<br>5) Installation Source：Local media<br>6) Software Selection：Minial Install<br>7) Installation Destination：将主硬盘里的所有空间都分配给根分区<br>8) KDUMP：Kdump is disabled<br>9) Network &amp; Host Name：开启网络联接并设置好固定 DNS<br>10) SECURITY POLICY：No controller found<br>）</p>



<p>（这里以将 IP 地址设置为固定 IP 地址 192.168.0.1，DNS 设置为固定 DNS 8.8.8.8 为例）</p>



<h3 id="步骤三-安装图形系统桌面">步骤三：安装图形系统桌面</h3>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># yum groupinstall -y "Server with GUI"</code></pre>



<h3 id="步骤四-安装中文输入法4-1-安装中文库">步骤四：安装中文输入法</h3>



<h4 id="步骤四-安装中文输入法4-1-安装中文库">4.1 安装中文库</h4>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># yum -y install langpacks-zh_CN</code></pre>



<h4 id="4-2-确认中文库已经安装">4.2 确认中文库已经安装</h4>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># locale -a</code></pre>



<h4 id="4-3-安装中文输入法">4.3 安装中文输入法</h4>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># yum -y install ibus ibus-libpinyin</code></pre>



<h3 id="步骤五-创建用户用户5-1-创建用户用户">步骤五：创建用户用户</h3>



<h4 id="步骤五-创建用户用户5-1-创建用户用户">5.1 创建用户用户</h4>



<p>（分别在电脑、VPS 和客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code># useradd zhumingyu</code></pre>



<p>（补充：这里创建用户 zhumingyu 为例）</p>



<h4 id="5-2-给用户用户设置密码">5.2 给用户用户设置密码</h4>



<p>（分别在电脑、VPS 和客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code># passwd zhumingyu</code></pre>



<p>（补充：这里创建用户 zhumingyu 为例）</p>



<h3 id="步骤六-增加-centos-系统的稳定性6-1-延长看门狗喂狗间隔以减少系统被软锁出现-softlockup-的几率6-1-1-临时延长看门狗喂狗间隔的时间">步骤六：增加 CentOS 系统的稳定性</h3>



<h4 id="步骤六-增加-centos-系统的稳定性6-1-延长看门狗喂狗间隔以减少系统被软锁出现-softlockup-的几率6-1-1-临时延长看门狗喂狗间隔的时间">6.1 延长看门狗喂狗间隔以减少系统被软锁出现 softlockup 的几率</h4>



<h5 id="步骤六-增加-centos-系统的稳定性6-1-延长看门狗喂狗间隔以减少系统被软锁出现-softlockup-的几率6-1-1-临时延长看门狗喂狗间隔的时间">6.1.1 临时延长看门狗喂狗间隔的时间</h5>



<p>（分别在电脑和 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code># sysctl -w kernel.watchdog_thresh=60</code></pre>



<h5 id="6-1-2-永久延长看门狗喂狗间隔的时间6-1-2-1-添加延长看门狗喂狗间隔的设置">6.1.2 永久延长看门狗喂狗间隔的时间</h5>



<h5 id="6-1-2-永久延长看门狗喂狗间隔的时间6-1-2-1-添加延长看门狗喂狗间隔的设置">6.1.2.1 添加延长看门狗喂狗间隔的设置</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># vim /etc/sysctl.conf</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
kernel.watchdog_thresh=60</code></pre>



<h5 id="6-1-2-2-让添加延长看门狗喂狗间隔的设置生效">6.1.2.2 让添加延长看门狗喂狗间隔的设置生效</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># sysctl -p</code></pre>



<h5 id="6-1-3-让-softlockup-触发后直接宕机">6.1.3 让 softlockup 触发后直接宕机</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># echo 1 &gt; /proc/sys/kernel/softlockup_panic</code></pre>



<h4 id="6-2-禁止图形系统桌面的-dns-和路由以避免系统崩溃6-2-1-添加禁止图形系统桌面的-dns-和路由的设置">6.2 禁止图形系统桌面的 DNS 和路由以避免系统崩溃</h4>



<h5 id="6-2-禁止图形系统桌面的-dns-和路由以避免系统崩溃6-2-1-添加禁止图形系统桌面的-dns-和路由的设置">6.2.1 添加禁止图形系统桌面的 DNS 和路由的设置</h5>



<p>（分别在电脑和 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code># vim /etc/sysconfig/network-scripts/ifcfg-enp9s0</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
PEERDNS=no
PEERROUTES=no</code></pre>



<p>（补充：这里的 ifcfg-enp9s0 是指网卡对应的配置文件，不同的网卡对应的配置文件不同，这里以网卡名 ifcfg-enp9s0 为例，需要给所有网卡添加此参数，这一步也可以在系统图形系统桌面上设置）</p>



<h5 id="6-2-2-让禁止图形系统桌面的-dns-和路由的设置生效">6.2.2 让禁止图形系统桌面的 DNS 和路由的设置生效</h5>



<p>（分别在电脑和 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code># systemctl restart NetworkManager</code></pre>



<h4 id="6-3-禁止图形系统界面自动黑屏或自动挂起">6.3 禁止图形系统界面自动黑屏或自动挂起</h4>



<p>（只在电脑上执行以下步骤）</p>



<h4 id="6-4-让-ssh-联接永久不超时6-4-1-让-ssh-服务端的连接不超时">6.4 让 SSH 联接永久不超时</h4>



<h5 id="6-4-让-ssh-联接永久不超时6-4-1-让-ssh-服务端的连接不超时">6.4.1 让 SSH 服务端的连接不超时</h5>



<p>（分别在电脑和 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code># vim /etc/ssh/sshd_config</code></pre>



<p>将以下内容：</p>



<pre class="wp-block-code"><code>......
#ClientAliveInterval 0
#ClientAliveCountMax 3
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
ClientAliveInterval 60
ClientAliveCountMax 525600
......</code></pre>



<p>（补充：这样设置会让 SSH 服务端每 60s 就会尝试连接一次客户端，如果 525600 次后没有回应，则断开）</p>



<h5 id="6-4-2-让用户登陆永不超时6-4-2-1-在系统文件里添加让用户登陆永不超时的设置">6.4.2 让用户登录永不超时</h5>



<h5 id="6-4-2-让用户登陆永不超时6-4-2-1-在系统文件里添加让用户登陆永不超时的设置">6.4.2.1 在系统文件里添加让用户登录永不超时的设置</h5>



<p>（分别在电脑和 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code># vim /etc/bashrc</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
export TMOUT=0</code></pre>



<pre class="wp-block-code"><code># vim /etc/profile</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
export TMOUT=0</code></pre>



<h5 id="6-4-2-2-让用户登陆永不超时的设置立刻生效">6.4.2.2 让用户登录永不超时的设置立刻生效</h5>



<p>（分别在电脑和 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code># source /etc/bashrc
# source /etc/profile</code></pre>



<h4 id="6-5-删除不需要的软件包以避免-cpu-占用过高而崩溃-选做">6.5 删除不需要的软件包以避免 CPU 占用过高而崩溃（选做）</h4>



<p>（步骤略）</p>



<h3 id="步骤七-搭建虚拟化平台">步骤七：搭建虚拟化平台</h3>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># yum -y install qemu-kvm libvirt-daemon libvirt-client libvirt-daemon-driver-qemu virt-install virt-manager virt-viewer virt-v2v</code></pre>



<h3 id="步骤八-实现文件共享8-1-安装-samba-服务">步骤八：实现文件共享</h3>



<h4 id="步骤八-实现文件共享8-1-安装-samba-服务">8.1 安装 Samba 服务</h4>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># yum -y install samba
</code></pre>



<h4 id="8-2-配置-samba-服务的配置文件">8.2 配置 Samba 服务的配置文件</h4>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># vim /etc/samba/smb.conf</code></pre>



<p>将全部内容修改如下：</p>



<pre class="wp-block-code"><code># See smb.conf.example for a more detailed config file or
# read the smb.conf manpage.
# Run 'testparm' to verify the config is correct after
# you modified it.

&#91;global]
workgroup = WORKGROUP
realm = zhumingyu
netbios name = zhumingyu
#encrypt passwords = yes
map to guest = NEVER
security = user
password server = *
name resolve order = bcast host
restrict anonymous = 2
#null passwords = no
#guest account = smb_nobody
#use spnego = yes
client use spnego = yes
server string = ""
host msdfs = no
msdfs root = no
domain master = no
preferred master = no
local master = no
os level = 0
browse list = no
browseable = no
dns proxy = no
wide links = no
public= no
guest ok = no
hosts deny = ALL EXCEPT 192.168.0.2

&#91;share]
valid users = zhumingyu
write list = zhumingyu
read list = zhumingyu
path = /share
guest ok = no
read only = no
browseable = no
writable = yes
public = no
create mask = 0755
directory mask = 0755</code></pre>



<p>（<br>补充：<br>1) 这里以 Samba 服务器的 IP 地址是 192.168.0.1 为例<br>2) 这里的 workgroup = WORKGROUP 是让 Samba 服务属于 WORKGROUP<br>3) 这里的 hosts deny = ALL EXCEPT 192.168.0.2 是只让客户端 192.168.0.3 能够访问服务端的 Samba<br>4) 这里的 sharetest 是这个 Samba 挂载点的名称，挂载这个挂载点的格式就是：//192.168.0.1/share<br>5) 这里的 valid users = zhumingyu 是 Samba 服务共享用户需要手动生成<br>6) 这里的 path = /share 是 Samba 服务共享目录需要手动生成<br>）</p>



<h4 id="8-3-设置-samba-服务共享用户8-3-1-给-samba-服务共享用户设置-samba-共享密码">8.3 设置 Samba 服务共享用户</h4>



<h5 id="8-3-设置-samba-服务共享用户8-3-1-给-samba-服务共享用户设置-samba-共享密码">8.3.1 给 Samba 服务共享用户设置 Samba 共享密码</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># smbpasswd -a zhumingyu</code></pre>



<p>（补充：这里以用户 zhumingyu 为例）</p>



<h5 id="8-3-2-显示-samba-服务共享用户是否可用">8.3.2 显示 Samba 服务共享用户是否可用</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># pdbedit -L</code></pre>



<h4 id="8-4-生成-samba-服务共享目录8-4-1-生成-samba-服务共享目录">8.4 生成 Samba 服务共享目录</h4>



<h5 id="8-4-生成-samba-服务共享目录8-4-1-生成-samba-服务共享目录">8.4.1 生成 Samba 服务共享目录</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># mkdir /share</code></pre>



<h5 id="8-4-2-给-samba-服务共享目录设置权限">8.4.2 给 Samba 服务共享目录设置权限</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># chmod 755 /share/</code></pre>



<h5 id="8-4-3-给-samba-服务共享目录设置所属主和所属组">8.4.3 给 Samba 服务共享目录设置所属主和所属组</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># chown zhumingyu:zhumingyu /share/</code></pre>



<p>（补充：这里以用户 zhumingyu 为例）</p>



<h5 id="8-4-4-给-samba-服务共享目录设置-selinux-标签">8.4.4 给 Samba 服务共享目录设置 selinux 标签</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># semanage fcontext -a -t samba_share_t '/share(/.*)?'</code></pre>



<h5 id="8-4-5-让-samba-服务共享目录上的-selinux-标签立刻生效">8.4.5 让 Samba 服务共享目录上的 selinux 标签立刻生效</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># restorecon -RFvv /share/</code></pre>



<h4 id="8-5-启动-samba-服务并设置为开机自动启动">8.5 启动 Samba 服务并设置为开机自动启动</h4>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># systemctl enable --now smb</code></pre>



<h4 id="8-6-在系统防火墙开放-samba-的端口8-6-1-在系统防火墙开放-samba-的端口">8.6 在系统防火墙开放 Samba 的端口</h4>



<h5 id="8-6-在系统防火墙开放-samba-的端口8-6-1-在系统防火墙开放-samba-的端口">8.6.1 在系统防火墙开放 Samba 的端口</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># firewall-cmd --add-service=samba --permanent</code></pre>



<h5 id="8-6-2-让系统防火墙重新加载">8.6.2 让系统防火墙重新加载</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># firewall-cmd --reload</code></pre>



<h3 id="步骤九-实现远程桌面9-1-安装-vnc-服务">步骤九：实现远程桌面</h3>



<h4 id="步骤九-实现远程桌面9-1-安装-vnc-服务">9.1 安装 vnc 服务</h4>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># yum -y install tigervnc tigervnc-server</code></pre>



<h4 id="9-2-设置-vnc-服务共享用户9-2-1-进入用户">9.2 设置 VNC 服务共享用户</h4>



<h5 id="9-2-设置-vnc-服务共享用户9-2-1-进入用户">9.2.1 进入用户</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># su - zhumingyu</code></pre>



<p>（补充：这里以用户 zhumingyu 为例）</p>



<h5 id="9-2-2-给-vnc-服务共享用户设置-vnc-远程密码">9.2.2 给 VNC 服务共享用户设置 VNC 远程密码</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ vncpasswd</code></pre>



<h5 id="9-2-3-退出用户">9.2.3 退出用户</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ exit</code></pre>



<h4 id="9-3-启动-vnc-并设置为开机自动启动9-3-1-创建开启-vnc-的脚本-vnc-sh9-3-1-1-进入到用户">9.3 启动 VNC 并设置为开机自动启动</h4>



<h5 id="9-3-启动-vnc-并设置为开机自动启动9-3-1-创建开启-vnc-的脚本-vnc-sh9-3-1-1-进入到用户">9.3.1 创建开启 VNC 的脚本 ~/vnc.sh</h5>



<h5 id="9-3-启动-vnc-并设置为开机自动启动9-3-1-创建开启-vnc-的脚本-vnc-sh9-3-1-1-进入到用户">9.3.1.1 进入到用户</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># su - zhumingyu</code></pre>



<p>（补充：这里以用户 zhumingyu 为例）</p>



<h5 id="9-3-1-2-创建开启-vnc-的脚本-vnc-sh">9.3.1.2 创建开启 VNC 的脚本 ~/vnc.sh</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ vim ~/vnc.sh</code></pre>



<p>创建以下内容：</p>



<pre class="wp-block-code"><code>#!/bin/bash

vncserver -list | grep :1 &amp;&gt; /dev/null || vncserver :1 -localhost -nolisten tcp</code></pre>



<p>（补充：此命令会检查 vncserver :1 会话是否存在，如果不存在，就以禁止非安全远程登录的方式创建一个）</p>



<h5 id="9-3-1-3-退出用户">9.3.1.3 退出用户</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ exit</code></pre>



<h5 id="9-3-2-执行开启-vnc-的脚本9-3-2-1-开机执行开启-vnc-的脚本9-3-2-1-1-配置开机执行的文件">9.3.2 执行开启 VNC 的脚本</h5>



<h5 id="9-3-2-执行开启-vnc-的脚本9-3-2-1-开机执行开启-vnc-的脚本9-3-2-1-1-配置开机执行的文件">9.3.2.1 开机执行开启 VNC 的脚本</h5>



<h5 id="9-3-2-执行开启-vnc-的脚本9-3-2-1-开机执行开启-vnc-的脚本9-3-2-1-1-配置开机执行的文件">9.3.2.1.1 配置开机执行的文件</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># vim /etc/rc.local</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
su - zhumingyu -c '/home/zhumingyu/vnc.sh'</code></pre>



<p>（补充：这里以用户 zhumingyu 的身份运行）</p>



<p>或者：</p>



<pre class="wp-block-code"><code>......
su - zhumingyu -c 'vncserver -list | grep :1' &amp;&gt; /dev/null || su - zhumingyu -c 'vncserver :1 -localhost -nolisten tcp'</code></pre>



<p>（<br>补充：<br>1) 如果前面没有创建脚本的话，可以只添加上面“或者”后面的这一行<br>2) 以用户 zhumingyu 的身份运行<br>3) 此命令会检查 vncserver :1 会话是否存在，如果不存在，就以禁止非安全远程登录的方式创建一个<br>）</p>



<h5 id="9-3-2-1-2-给开机执行的文件执行权限">9.3.2.1.2 给开机执行的文件执行权限</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># chmod u+x /home/zhumingyu/vnc.sh</code></pre>



<h5 id="9-3-2-2-定期执行开启-vnc-的脚本9-3-2-2-1-进入到用户">9.3.2.2 定期执行开启 VNC 的脚本</h5>



<h5 id="9-3-2-2-定期执行开启-vnc-的脚本9-3-2-2-1-进入到用户">9.3.2.2.1 进入到用户</h5>



<pre class="wp-block-code"><code># su - zhumingyu</code></pre>



<p>（补充：这里以用户 zhumingyu 为例）</p>



<h5 id="9-3-2-2-2-配置定期执行的文件">9.3.2.2.2 配置定期执行的文件</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ crontab -e</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
0 */1 * * * /home/zhumingyu/vnc.sh</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code>......
0 */1 * * * vncserver -list | grep :1' &amp;&gt; /dev/null || su - zhumingyu -c 'vncserver :1 -localhost -nolisten tcp</code></pre>



<p>（<br>补充：<br>1) 这里以用户 zhumingyu 的身份运行<br>2) 如果前面没有创建脚本的话，可以只添加上面“或者”后面的这一行<br>3) 此命令会检查 vncserver :1 会话是否存在，如果不存在，就以禁止非安全远程登录的方式创建一个<br>）</p>



<h5 id="9-3-2-2-3-退出用户">9.3.2.2.3 退出用户</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ exit</code></pre>



<h3 id="步骤十-设置-ssh-内网穿透10-1-生成-ssh-密钥10-1-1-进入到用户">步骤十：设置 SSH 内网穿透</h3>



<h5 id="步骤十-设置-ssh-内网穿透10-1-生成-ssh-密钥10-1-1-进入到用户">10.1 生成 SSH 密钥</h5>



<h5 id="步骤十-设置-ssh-内网穿透10-1-生成-ssh-密钥10-1-1-进入到用户">10.1.1 进入到用户</h5>



<p>（分别在电脑、VPS 和客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code># su - zhumingyu</code></pre>



<p>（补充：这里以用户 zhumingyu 为例）</p>



<h5 id="10-1-2-生成-ssh-密钥">10.1.2 生成 SSH 密钥</h5>



<p>（分别在电脑、VPS 和客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ ssh-keygen -b 2048 -t rsa</code></pre>



<p>（补充：建议在创建 SSH 密钥时为 SSH 密钥添加一个密码）</p>



<h5 id="10-1-3-退出用户">10.1.3 退出用户</h5>



<p>（分别在电脑、VPS 和客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ exit</code></pre>



<h4 id="10-2-实现无密钥-ssh10-2-1-进入到用户">10.2 实现无密钥 SSH</h4>



<h5 id="10-2-实现无密钥-ssh10-2-1-进入到用户">10.2.1 进入到用户</h5>



<p>（分别在电脑、VPS 和客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code># su - zhumingyu</code></pre>



<p>（补充：这里以用户 zhumingyu 为例）</p>



<h5 id="10-2-2-让电脑可以无密钥-ssh-vps">10.2.2 让电脑可以无密钥 SSH VPS</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ ssh-copy-id &lt;public IP address of VPS&gt;</code></pre>



<h5 id="10-2-3-让-vps-可以无密钥-ssh-自己">10.2.3 让 VPS 可以无密钥 SSH 自己</h5>



<p>（只在 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ ssh-copy-id localhost</code></pre>



<h5 id="10-2-4-让客户端可以远程-vps-和电脑">10.2.4 让客户端可以远程 VPS 和电脑</h5>



<pre class="wp-block-code"><code>$ ssh-copy-id &lt;IP address of computer&gt;
$ ssh-copy-id &lt;public IP address of VPS&gt;</code></pre>



<h5 id="10-2-5-退出用户">10.2.5 退出用户</h5>



<p>（分别在电脑、VPS 和客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ exit</code></pre>



<h4 id="10-3-建立电脑到-vps-的-ssh-隧道并设置为开机自启10-3-1-创建建立电脑到-vps-的-ssh-隧道的脚本-ssh-sh10-3-1-1-进入到用户">10.3 建立电脑到 VPS 的 SSH 隧道并设置为开机自启</h4>



<h5 id="10-3-建立电脑到-vps-的-ssh-隧道并设置为开机自启10-3-1-创建建立电脑到-vps-的-ssh-隧道的脚本-ssh-sh10-3-1-1-进入到用户">10.3.1 创建建立电脑到 VPS 的 SSH 隧道的脚本 ～/ssh.sh<br>10.3.1.1 进入到用户</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># su - zhumingyu</code></pre>



<p>（补充：这里以用户 zhumingyu 为例）</p>



<h5 id="10-3-1-2-创建建立电脑到-vps-的-ssh-隧道的脚本-ssh-sh">10.3.1.2 创建建立电脑到 VPS 的 SSH 隧道的脚本 ～/ssh.sh</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ vim ～/ssh.sh</code></pre>



<p>创建以下内容：</p>



<pre class="wp-block-code"><code>ps -aux | grep -v grep | grep "11000:localhost:22 &lt;IP address of computer&gt;" &amp;&gt; /dev/null || ssh -X -fCNR 11000:localhost:22 &lt;IP address of computer&gt;</code></pre>



<p>（<br>补充：<br>1) 这里以用户 zhumingyu 的身份运行<br>2) 如果 11000 端口没有影射到 22 端口则影射<br>）</p>



<h5 id="10-3-1-3-退出用户">10.3.1.3 退出用户</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ exit</code></pre>



<h5 id="10-3-2-执行电脑到-vps-的-ssh-隧道的脚本10-3-2-1-开机执行开启电脑到-vps-的-ssh-隧道的脚本10-3-2-1-1-配置开机执行的文件">10.3.2 执行电脑到 VPS 的 SSH 隧道的脚本</h5>



<h5 id="10-3-2-执行电脑到-vps-的-ssh-隧道的脚本10-3-2-1-开机执行开启电脑到-vps-的-ssh-隧道的脚本10-3-2-1-1-配置开机执行的文件">10.3.2.1 开机执行开启电脑到 VPS 的 SSH 隧道的脚本</h5>



<h5 id="10-3-2-执行电脑到-vps-的-ssh-隧道的脚本10-3-2-1-开机执行开启电脑到-vps-的-ssh-隧道的脚本10-3-2-1-1-配置开机执行的文件">10.3.2.1.1 配置开机执行的文件</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># vim /etc/rc.local</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
su - zhumingyu -c '/home/zhumingyu/ssh.sh'</code></pre>



<p>（补充：这里以用户 zhumingyu 的身份运行）</p>



<p>或者：</p>



<pre class="wp-block-code"><code>......
ps -aux | grep -v grep | grep "11000:localhost:22 &lt;IP address of computer&gt;" &amp;&gt; /dev/null || su - zhumingyu -c 'ssh -X -fCNR 11000:localhost:22 &lt;IP address of computer&gt;'</code></pre>



<p>（<br>补充：<br>1) 如果前面没有创建脚本的话，可以只添加上面“或者”后面的这一行<br>2) 这里以用户 zhumingyu 的身份运行<br>3) 如果 11000 端口没有影射到 22 端口则影射<br>）</p>



<h5 id="10-3-2-1-2-给开机执行的文件执行权限">10.3.2.1.2 给开机执行的文件执行权限</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># chmod +x /etc/rc.local</code></pre>



<h5 id="10-3-3-定期执行电脑到-vps-的-ssh-隧道的脚本10-3-3-1-进入到用户">10.3.3 定期执行电脑到 VPS 的 SSH 隧道的脚本</h5>



<h5 id="10-3-3-定期执行电脑到-vps-的-ssh-隧道的脚本10-3-3-1-进入到用户">10.3.3.1 进入到用户</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># su - zhumingyu</code></pre>



<p>（补充：这里以 zhumingyu 为例）</p>



<h5 id="10-3-3-2-配置定期执行的文件">10.3.3.2 配置定期执行的文件</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ crontab -e</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
0 */1 * * * /home/zhumingyu/ssh.sh</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code>......
0 */1 * * * ps -aux | grep -v grep | grep "11000:localhost:22 &lt;IP address of computer&gt;" &amp;&gt; /dev/null || ssh -X -fCNR 11000:localhost:22 &lt;IP address of computer&gt;</code></pre>



<p>（补充：如果 11000 端口影射到 22 端口则影射）</p>



<h5 id="10-3-3-3-退出用户">10.3.3.3 退出用户</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ exit</code></pre>



<h4 id="10-4-建立-vps-的-ssh-隧道端口映射并设置为开机自启10-4-1-创建建立-vps-的-ssh-隧道端口映射的脚本10-4-1-1-进入到用户">10.4 建立 VPS 的 SSH 隧道端口映射并设置为开机自启</h4>



<h5 id="10-4-建立-vps-的-ssh-隧道端口映射并设置为开机自启10-4-1-创建建立-vps-的-ssh-隧道端口映射的脚本10-4-1-1-进入到用户">10.4.1 创建建立 VPS 的 SSH 隧道端口映射的脚本</h5>



<h5 id="10-4-建立-vps-的-ssh-隧道端口映射并设置为开机自启10-4-1-创建建立-vps-的-ssh-隧道端口映射的脚本10-4-1-1-进入到用户">10.4.1.1 进入到用户</h5>



<p>（只在 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code># su - zhumingyu</code></pre>



<p>（补充：这里以用户 zhumingyu 为例）</p>



<h5 id="10-4-1-2-创建建立-vps-的-ssh-隧道端口映射的脚本">10.4.1.2 创建建立 VPS 的 SSH 隧道端口映射的脚本</h5>



<p>（只在 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ vim ~/sshd.sh</code></pre>



<p>创建以下内容：</p>



<pre class="wp-block-code"><code>#!/bin/bash

ps -aux | grep -v grep | grep "*:10000:localhost:11000 localhost" || ssh -X -fCNL *:10000:localhost:11000 localhost</code></pre>



<p>（补充：如果 11000 端口没有影射成 10000 端口则影射）</p>



<h5 id="10-4-1-3-退出用户">10.4.1.3 退出用户</h5>



<p>（只在 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ exit</code></pre>



<h5 id="10-4-2-执行电脑到-vps-的-ssh-隧道的脚本10-4-2-1-开机执行开启电脑到-vps-的-ssh-隧道的脚本10-4-2-1-1-配置开机执行的文件">10.4.2 执行电脑到 VPS 的 SSH 隧道的脚本</h5>



<h5 id="10-4-2-执行电脑到-vps-的-ssh-隧道的脚本10-4-2-1-开机执行开启电脑到-vps-的-ssh-隧道的脚本10-4-2-1-1-配置开机执行的文件">10.4.2.1 开机执行开启电脑到 VPS 的 SSH 隧道的脚本</h5>



<h5 id="10-4-2-执行电脑到-vps-的-ssh-隧道的脚本10-4-2-1-开机执行开启电脑到-vps-的-ssh-隧道的脚本10-4-2-1-1-配置开机执行的文件">10.4.2.1.1 配置开机执行的文件</h5>



<p>（只在 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code># vim /etc/rc.local</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
su - zhumingyu -c '/home/zhumingyu/sshd.sh'</code></pre>



<p>（补充：这里以用户 zhumingyu 为例）</p>



<p>或者：</p>



<pre class="wp-block-code"><code>......
ps -aux | grep -v grep | grep "*:10000:localhost:11000 localhost" || su - zhumingyu -c 'ssh -X -fCNL *:10000:localhost:11000 localhost'</code></pre>



<p>（<br>补充：<br>1) 如果前面没有创建脚本的话，可以只添加上面“或者”后面的这一行<br>2) 以用户 zhumingyu 的身份运行<br>3) 如果 11000 端口没有影射成 10000 端口则影射<br>）</p>



<h5 id="10-4-2-1-2-给开机执行的文件执行权限">10.4.2.1.2 给开机执行的文件执行权限</h5>



<p>（只在 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code># chmod +x /etc/rc.local</code></pre>



<h5 id="10-4-3-定期执行电脑到-vps-的-ssh-隧道的脚本10-4-3-1-进入到用户用户">10.4.3 定期执行电脑到 VPS 的 SSH 隧道的脚本</h5>



<h5 id="10-4-3-定期执行电脑到-vps-的-ssh-隧道的脚本10-4-3-1-进入到用户用户">10.4.3.1 进入到用户用户</h5>



<p>（只在 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code># su - zhumingyu</code></pre>



<p>（补充：这里以用户 zhumingyu 为例）</p>



<h5 id="10-4-3-2-配置定期执行的文件">10.4.3.2 配置定期执行的文件</h5>



<p>（只在 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ crontab -e</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
0 */1 * * * /home/zhumingyu/sshd.sh</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code>......
0 */1 * * * ps -aux | grep -v grep | grep "*:10000:localhost:11000 localhost" || ssh -X -fCNL *:10000:localhost:11000 localhost</code></pre>



<p>（<br>补充：<br>1) 如果前面没有创建脚本的话，可以只添加上面“或者”后面的这一行<br>2) 如果 11000 端口没有影射成 10000 端口则影射<br>）</p>



<h5 id="10-4-4-退出用户">10.4.4 退出用户</h5>



<p>（只在 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ exit</code></pre>



<h5 id="10-4-5-打开外网-vps-对应端口的防火墙10-4-5-1-打开外网-vps-对应端口的防火墙">10.4.5 打开外网 VPS 对应端口的防火墙</h5>



<h5 id="10-4-5-打开外网-vps-对应端口的防火墙10-4-5-1-打开外网-vps-对应端口的防火墙">10.4.5.1 打开外网 VPS 对应端口的防火墙</h5>



<p>（只在 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code># firewall-cmd --add-port=10000/tcp --permanent</code></pre>



<p>（补充：这里打开的端口号，是根据前面的设置而定的）</p>



<h5 id="10-4-5-2-让刚刚外网-vps-刚刚配置的防火墙生效">10.4.5.2 让刚刚外网 VPS 刚刚配置的防火墙生效</h5>



<p>（只在 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code># firewall-cmd --reload</code></pre>



<h3 id="步骤十一-加强-ssh-的安全性-选做-11-1-禁止-root-被-ssh-选做">步骤十一：加强 SSH 的安全性（选做）</h3>



<h4 id="步骤十一-加强-ssh-的安全性-选做-11-1-禁止-root-被-ssh-选做">11.1 禁止 root 被 SSH（选做）</h4>



<p>（分别在电脑和 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code># vim /etc/ssh/sshd_config</code></pre>



<p>将以下内容：</p>



<pre class="wp-block-code"><code>......
PermitRootLogin no
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
PermitRootLogin yes
......</code></pre>



<h4 id="11-2-禁止使用密码被-ssh-选做">11.2 禁止使用密码被 SSH（选做）</h4>



<p>（分别在电脑和 VPS 上执行以下步骤）</p>



<pre class="wp-block-code"><code># vim /etc/ssh/sshd_config</code></pre>



<p>将以下内容：</p>



<pre class="wp-block-code"><code>......
# PasswordAuthentication yes
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
PasswordAuthentication no
......</code></pre>



<h3 id="步骤十二-私有远程桌面和虚拟化平台的使用12-1-客户端-ssh-联接电脑的方法12-1-1-客户端和电脑不在同一内网时">步骤十二：私有远程桌面和虚拟化平台的使用</h3>



<h4 id="步骤十二-私有远程桌面和虚拟化平台的使用12-1-客户端-ssh-联接电脑的方法12-1-1-客户端和电脑不在同一内网时">12.1 客户端 SSH 联接电脑的方法</h4>



<h5 id="步骤十二-私有远程桌面和虚拟化平台的使用12-1-客户端-ssh-联接电脑的方法12-1-1-客户端和电脑不在同一内网时">12.1.1 客户端和电脑不在同一内网时</h5>



<p>（只在客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code># ssh -X -p &lt;SSH non standard port number&gt; &lt;user of computer&gt;@&lt;public IP address of VPS&gt;</code></pre>



<p>（<br>补充：<br>1) 如果按照前面的步骤操作，这里的 VPS 每小时会生成一个新的 SSH 非标准端口号以用于联接电脑，比如说现在是 14 点，那就会自动生成一个 11014 的 SSH 非标准端口号<br>2) 如果按照前面的步骤操作，这里的用户是 zhumingyu<br>）</p>



<h5 id="12-1-2-客户端和电脑在同一内网时">12.1.2 客户端和电脑在同一内网时</h5>



<p>（只在客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code># ssh -X &lt;user of computer&gt;@&lt;IP address of computer&gt;</code></pre>



<p>（<br>补充：<br>1) 如果按照前面的步骤操作，这里的用户用户是 zhumingyu<br>2) 如果按照前面的步骤操作，这里的电脑的 IP 地址是 192.168.0.1<br>）</p>



<h4 id="12-2-客户端使用电脑虚拟化平台的的方法12-2-1-客户端和电脑不在同一内网时12-2-1-1-在客户端上联接电脑">12.2 客户端使用电脑虚拟化平台的的方法</h4>



<h5 id="12-2-客户端使用电脑虚拟化平台的的方法12-2-1-客户端和电脑不在同一内网时12-2-1-1-在客户端上联接电脑">12.2.1 客户端和电脑不在同一内网时</h5>



<h5 id="12-2-客户端使用电脑虚拟化平台的的方法12-2-1-客户端和电脑不在同一内网时12-2-1-1-在客户端上联接电脑">12.2.1.1 在客户端上联接电脑</h5>



<p>（只在客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code># ssh -X -p &lt;SSH non standard port number&gt; &lt;user of computer&gt;@&lt;public IP address of VPS&gt;</code></pre>



<p>（<br>补充：<br>1) 如果按照前面的步骤操作，这里的 VPS 每小时会生成一个新的 SSH 非标准端口号以用于联接电脑，比如说现在是 14 点，那就会自动生成一个 11014 的 SSH 非标准端口号<br>2) 如果按照前面的步骤操作，这里的用户用户是 zhumingyu<br>）</p>



<h5 id="12-2-1-2-通过-ssh-开启虚拟化图形管理平台">12.2.1.2 通过 ssh 开启虚拟化图形管理平台</h5>



<p>（只在客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code># virt-manager</code></pre>



<p>（注意：网络带宽很小则远程桌面会比较卡，建议电脑、客户端和 VPS 的带宽 2m 以上）</p>



<h5 id="12-2-2-客户端和电脑在同一内网时12-2-2-1-在客户端上联接电脑">12.2.2 客户端和电脑在同一内网时</h5>



<h5 id="12-2-2-客户端和电脑在同一内网时12-2-2-1-在客户端上联接电脑">12.2.2.1 在客户端上联接电脑</h5>



<p>（只在客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code># ssh -X &lt;user of computer&gt;@&lt;IP address of computer&gt;</code></pre>



<p>（<br>补充：<br>1) 如果按照前面的步骤操作，这里的用户用户是 zhumingyu<br>2) 如果按照前面的步骤操作，这里的电脑的 IP 地址是 192.168.0.1<br>）</p>



<h5 id="12-2-2-2-通过-ssh-开启虚拟化图形管理平台">12.2.2.2 通过 ssh 开启虚拟化图形管理平台</h5>



<p>（只在客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code># virt-manager</code></pre>



<p>（注意：网络带宽很小则远程桌面会比较卡，建议电脑、客户端和 VPS 的带宽 2m 以上）</p>



<h4 id="12-3-客户端使用私有远程桌面的方法12-3-1-客户端和电脑不在同一内网时">12.3 客户端使用私有远程桌面的方法</h4>



<h5 id="12-3-客户端使用私有远程桌面的方法12-3-1-客户端和电脑不在同一内网时">12.3.1 客户端和电脑不在同一内网时</h5>



<p>（只在客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code># ssh -p &lt;SSH non standard port number&gt; -L &lt;port number of VNC&gt;:localhost:&lt;port number of VNC&gt; -l &lt;user of computer&gt; &lt;public IP address of VPS&gt;</code></pre>



<p>（<br>补充：<br>1) 如果按照前面的步骤操作，这里的 VPS 每小时会生成一个新的 SSH 非标准端口号以用于联接电脑，比如说现在是 14 点，那就会自动生成一个 11014 的 SSH 非标准端口号<br>2) 如果按照前面的步骤操作，这里的 VNC 的端口号是 5901<br>3) 如果按照前面的步骤操作，这里的电脑的用户用户是 zhumingyu<br>）</p>



<p>另开启一个命令行终端：</p>



<pre class="wp-block-code"><code># vncviewer localhost :&lt;number of VNC service&gt;</code></pre>



<p>（补充：如果按照前面的步骤操作，这里的 VNC 服务的编号是 1）</p>



<p>（注意：网络带宽很小则远程桌面会比较卡，建议电脑、客户端和 VPS 的带宽 2m 以上）</p>



<h5 id="12-3-2-客户端和电脑在同一内网时">12.3.2 客户端和电脑在同一内网时</h5>



<p>（只在客户端上执行以下步骤）</p>



<pre class="wp-block-code"><code># vncviewer -via &lt;user of computer&gt;@&lt;IP address of computer&gt; localhost :&lt;number of VNC service&gt;</code></pre>



<p>（<br>补充：<br>1) 如果按照前面的步骤操作，这里的电脑的用户是 zhumingyu<br>2) 如果按照前面的步骤操作，这里的电脑的 IP 地址是 192.168.0.1<br>3) 如果按照前面的步骤操作，这里的 VNC 服务的编号是 1<br>）</p>



<h4 id="12-4-客户端在内网和电脑互传数据的方法12-4-1-在-windows-图形客户端上和电脑互传数据的方法">12.4 客户端在内网和电脑互传数据的方法</h4>



<h5 id="12-4-客户端在内网和电脑互传数据的方法12-4-1-在-windows-图形客户端上和电脑互传数据的方法">12.4.1 在 Windows 图形客户端上和电脑互传数据的方法</h5>



<p>（只在客户端上执行以下步骤）</p>



<p>在文件目录下栏输入以下内容：</p>



<pre class="wp-block-code"><code>\\&lt;IP address of computer&gt;\&lt;samba directory&gt;</code></pre>



<p>（<br>补充：<br>1) 如果按照前面的步骤操作，这里的电脑的 IP 地址是 192.168.0.1<br>2) 如果按照前面的步骤操作，这里的 Samba 项目是 share<br>）</p>



<p>（<br>注意：<br>1) 如果按照前面的步骤操作，只有 IP 地址是 192.168.0.2 和 192.168.0.3 的客户端才能够执行以上步骤<br>2) Windows 客户端建议安装 SecureCRT、Xmanager 和 VNC 客户端以实现 ssh、ssh 调用 virt-manager 和 VNC<br>）</p>



<h5 id="12-4-2-在-linux-图形客户端上和电脑互传数据的方法">12.4.2 在 Linux 图形客户端上和电脑互传数据的方法</h5>



<p>（只在客户端上执行以下步骤）</p>



<p>在文件 &#8211;&gt; 其他位置 &#8211;&gt; 连接到服务器的地址栏里输入以下内容：</p>



<pre class="wp-block-code"><code>smb://&lt;IP address of computer&gt;/&lt;samba directory&gt;</code></pre>



<p>（<br>补充：<br>1) 如果按照前面的步骤操作，这里的电脑的 IP 地址是 192.168.0.1<br>2) 如果按照前面的步骤操作，这里的 Samba 项目是 share<br>）</p>



<p>（注意：如果按照前面的步骤操作，只有 IP 地址是 192.168.0.2 和 192.168.0.3 的客户端才能够执行以上步骤）</p>



<h3 id="步骤十三-客户端直接使用公网-ip-地址联接电脑13-1-实现此步骤所需环境">步骤十三：客户端直接使用公网 IP 地址联接电脑</h3>



<h4 id="步骤十三-客户端直接使用公网-ip-地址联接电脑13-1-实现此步骤所需环境">13.1 实现此步骤所需环境</h4>



<p>网关路由器拥有 IP 地址（可以通过给宽带申请公网 IP 地址并将光纤盒设置为桥接模式，在路由器上添加用户和密码实现）</p>



<h4 id="13-2-在路由器上将电脑上的-22-端口映射到路由器上的公网-ip-地址上-这样路由器上的公网-ip-地址就变成电脑的公网-ip-地址了">13.2 在路由器上将电脑上的 22 端口映射到路由器上的公网 IP 地址上，这样路由器上的公网 IP 地址就变成电脑的公网 IP 地址了</h4>



<p>（步骤略）</p>



<h4 id="13-3-将电脑的公网-ip-地址放到-vps-上13-3-1-将电脑的公网-ip-地址放到-vps-上的意义">13.3 将电脑的公网 IP 地址放到 VPS 上</h4>



<h5 id="13-3-将电脑的公网-ip-地址放到-vps-上13-3-1-将电脑的公网-ip-地址放到-vps-上的意义">13.3.1 将电脑的公网 IP 地址放到 VPS 上的意义</h5>



<p>由于大多数的公网 IP 地址都是动态，定期会变，所以可以通过此方法知道近期的公网 IP 地址是多少</p>



<h5 id="13-3-2-创建将电脑的公网-ip-地址放到-vps-上的脚本13-3-2-1-进入到用户">13.3.2 创建将电脑的公网 IP 地址放到 VPS 上的脚本</h5>



<h5 id="13-3-2-创建将电脑的公网-ip-地址放到-vps-上的脚本13-3-2-1-进入到用户">13.3.2.1 进入到用户</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># su - zhumingyu</code></pre>



<p>（补充：这里以用户 zhumingyu 为例）</p>



<h5 id="13-3-2-2-创建将电脑的公网-ip-地址放到-vps-上的脚本">13.3.2.2 创建将电脑的公网 IP 地址放到 VPS 上的脚本</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ vim /root/computerip.sh</code></pre>



<p>创建以下内容：</p>



<pre class="wp-block-code"><code>#!/bin/bash

computerip=`curl ifconfig.me`
domain=&lt;public IP address of VPS&gt;

ssh athenadb.com \"echo `curl ifconfig.me` &gt; /home/zhumingyu/serverip.txt\"</code></pre>



<p>（补充：这里以将电脑的公网 IP 地址拷贝到 VPS 的 /tmp/computerip.txt 文件里为例）</p>



<h5 id="13-3-2-3-退出用户用户">13.3.2.3 退出用户用户</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ exit</code></pre>



<h5 id="13-3-3-执行将电脑的公网-ip-地址放到-vps-上的脚本13-3-3-1-进入到用户用户">13.3.3 执行将电脑的公网 IP 地址放到 VPS 上的脚本</h5>



<h5 id="13-3-3-执行将电脑的公网-ip-地址放到-vps-上的脚本13-3-3-1-进入到用户用户">13.3.3.1 进入到用户用户</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code># su - zhumingyu</code></pre>



<p>（补充：这里以用户 zhumingyu 为例）</p>



<h5 id="13-3-3-2-配置定期执行的文件">13.3.3.2 配置定期执行的文件</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ crontab -e</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
0 */10 * * * /home/zhumingyu/.crontab/computerip.txt</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code>......
ssh &lt;public IP address of VPS&gt; \"echo `curl ifconfig.me` &gt; /home/zhumingyu/serverip.txt\"</code></pre>



<p>（<br>补充：<br>1) 如果前面没有创建脚本的话，可以只添加上面“或者”后面的这一行<br>2) 将电脑的公网 IP 地址拷贝到 VPS 的 /home/zhumingyu/serverip.txt 文件里<br>）</p>



<h5 id="13-3-3-3-退出用户用户">13.3.3.3 退出用户用户</h5>



<p>（只在电脑上执行以下步骤）</p>



<pre class="wp-block-code"><code>$ exit</code></pre>



<h4 id="13-4-通过-ddns-服务显示电脑的公网-ip13-4-1-通过-ddns-服务显示电脑的公网-ip">13.4 通过 DDNS 服务显示电脑的公网 IP 地址</h4>



<h5 id="13-4-通过-ddns-服务显示电脑的公网-ip13-4-1-通过-ddns-服务显示电脑的公网-ip">13.4.1 通过 DDNS 服务显示电脑的公网 IP 地址</h5>



<p>由于大多数的公网 IP 地址都是动态，定期会变，所以可以通过此方法知道近期的公网 IP 地址是多少</p>



<h5 id="13-4-2-有些-ddns-服务可以在网关路由器上设置-并且通过手机-app-显示现在的公网-ip-地址">13.4.2 有些 DDNS 服务可以在网关路由器上设置，并且通过手机 APP 显示现在的公网 IP 地址</h5>



<p>（步骤略）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤]  浏览器模块的添加 （SwitchyOmega） （Chrome 版）</title>
		<link>https://eternalcenter-sep-2022.github.io/chrome-add-switchyomega/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sun, 12 Apr 2020 14:51:22 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Computer (系统电脑)]]></category>
		<category><![CDATA[System Computer & System Hardware & System Installation & System Upgradation (系统电脑 & 系统硬件 & 系统安装 & 系统升级)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=8738</guid>

					<description><![CDATA[步骤一：下载 SwitchyOmega_Chromium.crx 1.1 登录网址 https://github.com/FelisCatus/SwitchyOmega/releases1.2 选择对应的 SwitchyOmega 版本1.3 在页面的下方下载 SwitchyOmega_Chromium.crx 步骤二：解压 SwitchyOmega_Chromium.crx 2.1 将 SwitchyOmega_Chromium.crx 的后缀修改为 zip2.2 解压 SwitchyOmega_Chromium.zip 步骤三：添加 SwitchyOmega 模块 3.1 在 Chrome 浏览器中输入网址：chrome://extensions/3.2 打开页面右上角的“开发者模式”3.3 点击“加载已解压的扩展程序”3.4 选择刚刚解压好的 SwitchyOmega_Chromium 文件夹]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：下载 SwitchyOmega_Chromium.crx</h3>



<p>1.1 登录网址 https://github.com/FelisCatus/SwitchyOmega/releases<br>1.2 选择对应的 SwitchyOmega 版本<br>1.3 在页面的下方下载 SwitchyOmega_Chromium.crx</p>



<h3>步骤二：解压 SwitchyOmega_Chromium.crx</h3>



<p>2.1 将 SwitchyOmega_Chromium.crx 的后缀修改为 zip<br>2.2 解压 SwitchyOmega_Chromium.zip</p>



<h3>步骤三：添加 SwitchyOmega 模块</h3>



<p>3.1 在 Chrome 浏览器中输入网址：chrome://extensions/<br>3.2 打开页面右上角的“开发者模式”<br>3.3 点击“加载已解压的扩展程序”<br>3.4 选择刚刚解压好的 SwitchyOmega_Chromium 文件夹</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] MacBook Air （2017） openSUSE Leap 15.1 的安装</title>
		<link>https://eternalcenter-sep-2022.github.io/macbook-air-2017-install-opensuse-15/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 15 Feb 2020 16:31:32 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Computer (系统电脑)]]></category>
		<category><![CDATA[System Computer & System Hardware & System Installation & System Upgradation (系统电脑 & 系统硬件 & 系统安装 & 系统升级)]]></category>
		<category><![CDATA[System Installation (系统安装)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=8266</guid>

					<description><![CDATA[硬件准备： 制作一个 openSUSE Leap 15.1 安装 U 盘， openSUSE Leap 15.1 系统景象下载地址： https://www.opensuse.org/ 软件准备： 在第三方 openSUSE Leap 15.1 软件源上下载无线网卡驱动 broadcom-wl 和无线网卡驱动的依赖软件 broadcom-wl-kmp： https://mirrors.aliyun.com/packman/openSUSE_Leap_15.1/Essentials/x86_64/ 正文： 步骤一：在 MacBook Air（2017）上安装 openSUSE Leap 15.1 的前期工作 1.1 将 openSUSE 的安装 U 盘插在 MacBook Air（2017）上 （步骤略） （注意：U 盘需要是 ufi 模式） 1.2 在 MacBook Air（2017）上插入一根无驱动版 Linux 可识别的网线转 usb 网卡，并连接互联网 （步骤略） 1.3 按 &#8230; <p class="link-more"><a href="https://eternalcenter-sep-2022.github.io/macbook-air-2017-install-opensuse-15/" class="more-link">Continue reading<span class="screen-reader-text"> "[步骤] MacBook Air （2017） openSUSE Leap 15.1 的安装"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h1>硬件准备：</h1>



<p>制作一个 openSUSE Leap 15.1 安装 U 盘， openSUSE Leap 15.1 系统景象下载地址：</p>



<p class="has-text-align-center"><a href="https://www.opensuse.org/" target="_blank" rel="noreferrer noopener">https://www.opensuse.org/</a></p>



<h1>软件准备：</h1>



<p>在第三方 openSUSE Leap 15.1 软件源上下载无线网卡驱动 broadcom-wl 和无线网卡驱动的依赖软件 broadcom-wl-kmp：</p>



<p class="has-text-align-center"><a href="https://mirrors.aliyun.com/packman/openSUSE_Leap_15.1/Essentials/x86_64/" target="_blank" rel="noreferrer noopener">https://mirrors.aliyun.com/packman/openSUSE_Leap_15.1/Essentials/x86_64/</a></p>



<h1>正文：</h1>



<h3>步骤一：在 MacBook Air（2017）上安装 openSUSE Leap 15.1 的前期工作</h3>



<h4>1.1 将 openSUSE 的安装 U 盘插在 MacBook Air（2017）上</h4>



<p>（步骤略）</p>



<p>（注意：U 盘需要是 ufi 模式）</p>



<h4>1.2 在 MacBook Air（2017）上插入一根无驱动版 Linux 可识别的网线转 usb 网卡，并连接互联网</h4>



<p>（步骤略）</p>



<h4>1.3 按 MacBook Air（2017）的开机键后立刻按住 option 键</h4>



<p>（步骤略）</p>



<h4>1.4 选择从 U 盘进入系统</h4>



<p>（步骤略）</p>



<h3>步骤二：在 MacBook Air（2017）上安装 openSUSE Leap 15.1版本的 Linux 操作系统</h3>



<h4>2.1 进入 U 盘界面后选择 “Installation” 并回车</h4>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-1.png" alt="" class="wp-image-19660" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-1.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-1-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：1）</figcaption></figure></div>


<h4>2.2 直接点击 “Next”</h4>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-2.png" alt="" class="wp-image-19661" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-2.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-2-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：2）</figcaption></figure></div>


<h4>2.3 当出现 “Activate online repositories now?” 时直接点击 “No”</h4>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-3.png" alt="" class="wp-image-19662" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-3.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-3-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：3）</figcaption></figure></div>


<h4>2.4 选择 “Server” 并点击 “Next”</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-4.png" alt="" class="wp-image-19663" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-4.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-4-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：4）</figcaption></figure>



<h4>2.5 点击 “Guided Setup”</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-5.png" alt="" class="wp-image-19664" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-5.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-5-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：5）</figcaption></figure>



<h4>2.6 不设置硬盘密码，直接点击 “Next”</h4>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-6.png" alt="" class="wp-image-19665" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-6.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-6-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：6）</figcaption></figure></div>


<h4>2.7 按图：7 对硬盘进行设置</h4>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-7.png" alt="" class="wp-image-19666" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-7.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-7-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：7）</figcaption></figure></div>


<h4>2.8 点击 “Expert Partitioner” 下的 “Start with Current Proposal”</h4>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-8.png" alt="" class="wp-image-19668" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-8.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-8-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：8）</figcaption></figure></div>


<h4>2.9 按图：9 对硬盘进行分区并点击 “Accept”</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-9.png" alt="" class="wp-image-19669" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-9.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-9-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：9）</figcaption></figure>



<p>（<br>补充：<br>1) 要分出一部分硬盘空间用作系统启动<br>2) 系统分区不设置硬盘加密否则系统开机时会需要输入两次硬盘加密密码<br>3) 数据分区可以设置硬盘加密<br>4) 交换分区和内存设置的大小相同<br>5) 在左侧选择 “Hard Disks”，再在右侧选择对应的分区，再点击 “Delete” 可以将对应的分区删除<br>6) 在左侧选择 “Hard Disks”，再在右侧选择对应的硬盘，再点击 “Partitions” 可以创建、删除和修改分区<br>）</p>



<h4>2.10 点击 “Next”</h4>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-10.png" alt="" class="wp-image-19670" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-10.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-10-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：10）</figcaption></figure></div>


<h4>2.11 点击对应的地区选择对应的日期并点击 “Next”</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="768" height="403" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-11.png" alt="" class="wp-image-19671" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-11.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-11-300x157.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：11）</figcaption></figure>



<h4>2.12 选择 “Skip User Creation” 并点击 “Next”</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-12.png" alt="" class="wp-image-19672" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-12.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-12-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：12）</figcaption></figure>



<h4>2.13 给 root 用户设置密码并点击 “Next”</h4>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-13.png" alt="" class="wp-image-19673" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-13.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-13-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：13）</figcaption></figure></div>


<h4>2.14 按图：14 对即将安装的系统进行设置并点击 “Install”</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-14.png" alt="" class="wp-image-19674" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-14.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-14-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：14）</figcaption></figure>



<p>（<br>补充：<br>1) 在 “Security” 下开启 “Firewall”<br>2) 在 “Security” 下关闭 “SSH service”<br>3) 在 “Security” 下锁住 “SSH port”<br>4) 在 “Network Configuration” 下使用 “NetworkManager”<br>）</p>



<h4>2.15 此时系统便开始安装，等待系统安装完成</h4>



<p>（步骤略）</p>



<h3>步骤三：对 openSUSE Leap 15.1 操作系统进行配置</h3>



<h4>3.1 系统安装完成后使用 root 用户登录系统</h4>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-15.png" alt="" class="wp-image-19675" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-15.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-15-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：15）</figcaption></figure></div>


<h4>3.2 修改电脑名称</h4>



<pre class="wp-block-code"><code># hostnamectl set-hostname linux</code></pre>



<h4>3.3 安装无线网卡驱动</h4>



<h5>3.3.1 安装无线网卡驱动依赖包</h5>



<pre class="wp-block-code"><code># zypper in broadcom-wl-kmp-default-6.30.223.271_k4.12.14_lp151.28.36-pm151.11.61.x86_64.rpm</code></pre>



<h5>3.3.2 安装无线网卡驱动</h5>



<pre class="wp-block-code"><code># zypper in broadcom-wl-6.30.223.271-pm151.11.61.x86_64.rpm</code></pre>



<h4>3.4 使用 openSUSE Leap 15.1 官方的软件源</h4>



<h5>3.4.1 进入 yast</h5>



<p># yast</p>



<h5>3.4.2 选择 “Software” 下的 “Software Repositoies” 并回车</h5>



<figure class="wp-block-image size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-16.png" alt="" class="wp-image-19676" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-16.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-16-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：16）</figcaption></figure>



<h5>3.4.3 按图：17 设置系统软件源，之后选择 OK 并回车</h5>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-17.png" alt="" class="wp-image-19677" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-17.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-17-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：17）</figcaption></figure></div>


<p>（<br>补充：<br>1) Enabled “Main Repository”<br>2) Enabled “Main Update Repository”<br>3) Enabled “Non-OSS Repository”<br>4) Enabled “Update Repository（Non-Oss）”<br>5) 确保其他的软件源没有被 Enabled<br>）</p>



<h5>3.4.4 选择 “Quit” 并回车</h5>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-18.png" alt="" class="wp-image-19678" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-18.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-18-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：18）</figcaption></figure></div>


<h4>3.5 给系统安装最新的补丁</h4>



<pre class="wp-block-code"><code># zypper -n update</code></pre>



<h4>3.6 安装中文包</h4>



<h5>3.6.1 进入 yast</h5>



<pre class="wp-block-code"><code># yast</code></pre>



<h5>3.6.2 选择 “System” 下的 “Language” 并回车</h5>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-19.png" alt="" class="wp-image-19679" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-19.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-19-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：19）</figcaption></figure></div>


<h5>3.6.3 在 “Secondary Languages” 下选择 “Simplified Chinese” ，再选择 “OK” 并回车</h5>



<figure class="wp-block-image size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-20.png" alt="" class="wp-image-19680" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-20.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-20-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：20）</figcaption></figure>



<h5>3.6.4 选择 “Quit” 并回车</h5>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-21.png" alt="" class="wp-image-19681" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-21.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-21-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：21）</figcaption></figure></div>


<h4>3.7 让电脑支持 exfat 格式的 U 盘</h4>



<pre class="wp-block-code"><code># zypper -n install fuse-exfat exfat-utils</code></pre>



<h4>3.8 安装虚拟机环境和管理软件</h4>



<pre class="wp-block-code"><code># zypper in -t pattern kvm_server
# zypper in -t pattern kvm_tools</code></pre>



<h4>3.9 安装图形化桌面</h4>



<h5>3.9.1 安装 Gnome 图形桌面</h5>



<pre class="wp-block-code"><code># zypper -n in -t pattern gnome</code></pre>



<h5>3.9.2 将系统默认的图形桌面设置为 Gnome 图形桌面</h5>



<pre class="wp-block-code"><code># zypper -n in -t pattern gnome</code></pre>



<pre class="wp-block-code"><code>......
DISPLAYMANAGER_XSERVER="Xorg"</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
DISPLAYMANAGER_XSERVER="gdm"</code></pre>



<h5>3.9.3 设置系统开机进入图形桌面</h5>



<pre class="wp-block-code"><code># systemctl set-default graphical.target</code></pre>



<h5>3.9.4 立刻进入图形桌面</h5>



<pre class="wp-block-code"><code># init 5</code></pre>



<h5>3.9.5 输入 root 用户</h5>



<figure class="wp-block-image size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-22.png" alt="" class="wp-image-19682" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-22.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-22-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：22）</figcaption></figure>



<h5>3.9.6 输入 root 用户的密码</h5>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-23.png" alt="" class="wp-image-19683" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-23.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-23-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：23）</figcaption></figure></div>


<h5>3.9.7 此时便进入图形桌面</h5>



<figure class="wp-block-image size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-24.png" alt="" class="wp-image-19684" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-24.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-24-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：24）</figcaption></figure>



<h4>3.10 设置中文输入法</h4>



<h5>3.10.1 点击左上角的 “Activites” 再点击 “Settings”</h5>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-25.png" alt="" class="wp-image-19685" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-25.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-25-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：25）</figcaption></figure></div>


<h5>3.10.2 点击 “Region &amp; Language”</h5>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-26.png" alt="" class="wp-image-19686" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-26.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-26-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：26）</figcaption></figure></div>


<h5>3.10.3 点击 “Input Sources” 下面的 “+” 将 “English（US）” 换成 “Chinese (Intelligent Pinyin)”</h5>



<figure class="wp-block-image size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-27.png" alt="" class="wp-image-19687" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-27.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-27-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：27）</figcaption></figure>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-28.png" alt="" class="wp-image-19688" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-28.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-28-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：28）</figcaption></figure></div>

<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-29.png" alt="" class="wp-image-19689" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-29.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-29-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：29）</figcaption></figure></div>

<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-30.png" alt="" class="wp-image-19690" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-30.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-30-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：30）</figcaption></figure></div>


<h5>3.10.4 点击右上角的 “×” 以退出此界面</h5>



<p>（步骤略）</p>



<h4>3.11 添加新用户</h4>



<h5>3.11.1 点击右上角 “root” 下的 “Account Settings”</h5>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-31.png" alt="" class="wp-image-19691" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-31.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-31-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：31）</figcaption></figure></div>


<h5>3.11.2 点击右上角的 “Add User&#8230;”</h5>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-32.png" alt="" class="wp-image-19692" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-32.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-32-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：32）</figcaption></figure></div>


<h5>3.11.3 按图：32 设置用户和用户密码并点击 “Add”</h5>



<figure class="wp-block-image size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-33.png" alt="" class="wp-image-19693" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-33.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-33-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：33）</figcaption></figure>



<p>（<br>补充：<br>1) 设置 “Full Name”<br>2) 设置 “Username”<br>3) 选择 “Set a password now”<br>4) 设置 “Password”<br>）</p>



<h5>3.11.4 关闭此界面</h5>


<div class="wp-block-image">
<figure class="aligncenter size-full"><img loading="lazy" width="768" height="466" src="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-34.png" alt="" class="wp-image-19694" srcset="https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-34.png 768w, https://eternalcenter-sep-2022.github.io/wp-content/uploads/2021/12/MacBook-Air-2017-openSUSE-Leap-15-34-300x182.png 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /><figcaption>（图：34）</figcaption></figure></div>


<h4>3.12 此时 openSUSE 操作系统配置完成</h4>



<h3>补充一：使用 VPN 的方法</h3>



<pre class="wp-block-code"><code># sslocal -s &lt;server IP address&gt; -p &lt;server port&gt; -l &lt;local port&gt; -k &lt;server VPN password&gt; -t 600 -m &lt;server VPN encryption method&gt;</code></pre>



<p>（<br>补充：<br>1) 服务器的 IP 地址、服务器的端口号、服务器的 VPN 密码和服务器的 VPN 加密方法由服务端设置<br>2) 本地端口号可自行设置<br>）</p>



<p>（注意：这里的“本地端口号”要与刚刚在 /etc/proxychains.conf 里设置的 “socks5 127.0.0.1 1000” 中的 “1000” 一致）</p>



<pre class="wp-block-code"><code>
# proxychains4 &lt;application which need use VPN&gt;</code></pre>



<h3>补充二：使用虚拟机环境和管理器的方法</h3>



<h4>2.1 启用虚拟机环境</h4>



<pre class="wp-block-code"><code># systemctl start libvirtd</code></pre>



<h4>2.2 启动虚拟机管理器</h4>



<pre class="wp-block-code"><code># virt-manager </code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[排错] 解决 MacBook Air 安装 Linux 后无法通过键盘输出“～”符号和“`”符号</title>
		<link>https://eternalcenter-sep-2022.github.io/debug-macbook-air-linux-input/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sun, 26 May 2019 14:23:21 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Computer (系统电脑)]]></category>
		<category><![CDATA[System Computer & System Hardware & System Installation & System Upgradation (系统电脑 & 系统硬件 & 系统安装 & 系统升级)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=4722</guid>

					<description><![CDATA[解决方法 步骤一：切换到 root 用户 步骤二：设置系统变量]]></description>
										<content:encoded><![CDATA[
<h3>解决方法</h3>



<h4>步骤一：切换到 root 用户</h4>



<pre class="wp-block-code"><code>$ sudo -u root su - root</code></pre>



<h4>步骤二：设置系统变量</h4>



<pre class="wp-block-code"><code># echo 0 &gt; /sys/module/hid_apple/parameters/iso_layout</code></pre>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
