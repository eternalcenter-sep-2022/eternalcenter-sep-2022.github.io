<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>System Operation &amp; System Setting &amp; System Software (系统操作 &amp; 系统设置 &amp; 系统软件) &#8211; Eternal Center</title>
	<atom:link href="https://eternalcenter-sep-2022.github.io/category/system/system-operation-system-setting-system-software/feed/" rel="self" type="application/rss+xml" />
	<link>https://eternalcenter-sep-2022.github.io/</link>
	<description></description>
	<lastBuildDate>Fri, 09 Sep 2022 09:42:26 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	
	<item>
		<title>[内容] Linux 密码文件 /etc/shadow 的介绍 （显示用户密码相关的策略）</title>
		<link>https://eternalcenter-sep-2022.github.io/etc-shadow/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 09 Sep 2022 09:40:25 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=28282</guid>

					<description><![CDATA[内容一：/etc/shadow 文件的简介 1) /etc/shadow 文件存储着用户的密码和与之相关的信息2) /etc/shadow 文件以冒号 “:” 作为分隔符，分类 8 段 内容二：/etc/shadow 文件的作用 2.1 第 1 段内容：用户名 /etc/shadow 文件的第 1 段存储的是用户名，和 /etc/passwd 文件中的用户名是一一对应的 2.2 第 2 段内容：密码 2.2.1 内容的含义 1) 如果是奇怪的字符串则代表是加密过的密码，格式是 $id$salt$hashed，其中 $id 是指加密算法。如果字符串：以 $1$ 开头则代表是用 MD5 加密，以 $2a$ 开头则代表是用 Blowfish 加密，以 $2y$ 开头则代表是用另一种算法长度的 Blowfish 加密，以 $5$ 开头则代表是用 SHA-256 加密，以 $6$ 开头则代表是用 SHA-512 加密2) 如果是 &#8230; <p class="link-more"><a href="https://eternalcenter-sep-2022.github.io/etc-shadow/" class="more-link">Continue reading<span class="screen-reader-text"> "[内容] Linux 密码文件 /etc/shadow 的介绍 （显示用户密码相关的策略）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3>内容一：/etc/shadow 文件的简介</h3>



<p>1) /etc/shadow 文件存储着用户的密码和与之相关的信息<br>2) /etc/shadow 文件以冒号 “:” 作为分隔符，分类 8 段</p>



<h3>内容二：/etc/shadow 文件的作用</h3>



<h4>2.1 第 1 段内容：用户名</h4>



<p>/etc/shadow 文件的第 1 段存储的是用户名，和 /etc/passwd 文件中的用户名是一一对应的</p>



<h4>2.2 第 2 段内容：密码</h4>



<h5>2.2.1 内容的含义</h5>



<p>1) 如果是奇怪的字符串则代表是加密过的密码，格式是 $id$salt$hashed，其中 $id 是指加密算法。如果字符串：以 $1$ 开头则代表是用 MD5 加密，以 $2a$ 开头则代表是用 Blowfish 加密，以 $2y$ 开头则代表是用另一种算法长度的 Blowfish 加密，以 $5$ 开头则代表是用 SHA-256 加密，以 $6$ 开头则代表是用 SHA-512 加密<br>2) 如果是 2 个感叹号 “!!” 则代表从来都没有设置过密码<br>3) 如果为空则代表没有设置密码<br>4) 如果是 1 个星号 “*” 则代表用户被锁定，但是其它登陆方式不受限制，例 SSH 登陆<br>5) 如果是 1 个感叹号 “!” 则代表用户被锁定，但是其它登陆方式不受限制，例 SSH 登陆<br>6) 如果以 1 个感叹号开头 “!” 则代表用户被锁定<br>7) 如果以 2 个感叹号开头 “!!” 则代表用户被锁定</p>



<h5>2.2.2 查看命令</h5>



<pre class="wp-block-code"><code># cut -d: -f1,7</code></pre>



<h5>2.2.3 修改命令</h5>



<pre class="wp-block-code"><code># passwd &lt;user&gt;</code></pre>



<h4>2.3 第 3 段内容：密码最后的修改日期</h4>



<h5>2.3.1 内容的含义</h5>



<p>密码最后修改的日期于 1970 年 1 月 1 日相距的天数</p>



<h5>2.3.2 查看命令</h5>



<pre class="wp-block-code"><code># egrep ^&#91;^:]+:&#91;^\!*] /etc/shadow | cut -d: -f1,3</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># chage -l &lt;user&gt; | grep 'Last password change'</code></pre>



<h5>2.3.3 修改命令</h5>



<pre class="wp-block-code"><code># chage -d &lt;date&gt; &lt;user&gt;</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># chage --lastday &lt;date&gt; &lt;user&gt;</code></pre>



<h4>2.4 第 4 段内容：修改密码最短天数间隔</h4>



<h5>2.4.1 内容的含义</h5>



<p>两次修改密码最短天数间隔</p>



<p>1) 如果是 0 则代表随时可以修改密码<br>2) 如果是 99999 则代表永远都不能修改密码</p>



<h5>2.4.2 查看命令</h5>



<pre class="wp-block-code"><code># egrep ^&#91;^:]+:&#91;^\!*] /etc/shadow | cut -d: -f1,4</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># chage -l &lt;user&gt; | grep 'Minimum number of days between password change'</code></pre>



<h5>2.4.3 修改命令</h5>



<pre class="wp-block-code"><code># chage -m &lt;days&gt; &lt;user&gt;</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># chage --mindays &lt;days&gt; &lt;user&gt;</code></pre>



<h4>2.5 第 5 段内容：密码过期的天数</h4>



<h5>2.5.1 内容的含义</h5>



<p>修改密码后过多少天会过期</p>



<p>1) 如果是 99999 则代表永远都不会过期<br>2) 如果密码只是过期但是没有失效的话，则可以使用过期的密码更改密码再使用新密码登陆，如果密码失效的话则此密码不能再使用</p>



<h5>2.5.2 查看命令</h5>



<pre class="wp-block-code"><code># egrep ^&#91;^:]+:&#91;^\!*] /etc/shadow | cut -d: -f1,5</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># chage -l &lt;user&gt; | grep 'Maximum number of days between password change'</code></pre>



<h5>2.5.3 修改命令</h5>



<pre class="wp-block-code"><code># chage -M &lt;days&gt; &lt;user&gt;</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># chage --maxdays &lt;days&gt; &lt;user&gt;</code></pre>



<h4>2.6 第 6 段内容：密码过期前提前多少天发出警告</h4>



<h5>2.6.1 内容的含义</h5>



<p>密码过期前，提前多少天发出警告</p>



<p>如果为空则代表不发出警告</p>



<h5>2.6.2 查看命令</h5>



<pre class="wp-block-code"><code># egrep ^&#91;^:]+:&#91;^\!*] /etc/shadow | cut -d: -f1,6</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># chage -l &lt;user&gt; | grep 'Number of days of warning before password expires'</code></pre>



<h5>2.6.3 修改密码</h5>



<pre class="wp-block-code"><code># chage -W &lt;days&gt; &lt;user&gt;</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># chage --warndays &lt;days&gt; &lt;user&gt;</code></pre>



<h4>2.7 第 7 段内容：密码失效的天数</h4>



<h5>2.7.1 内容的含义</h5>



<p>密码过期后过多少天会失效</p>



<p>1) 如果是 99999 则代表永远都不会失效<br>2) 如果密码只是过期但是没有失效的话，则可以使用过期的密码更改密码再使用新密码登陆，如果密码失效的话则此密码不能再使用</p>



<h5>2.7.2 查看命令</h5>



<pre class="wp-block-code"><code># egrep ^&#91;^:]+:&#91;^\!*] /etc/shadow | cut -d: -f1,7</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># chage -l &lt;user&gt; | grep 'Password inactive'</code></pre>



<h5>2.7.3 修改密码</h5>



<pre class="wp-block-code"><code># chage -I &lt;days&gt; &lt;user&gt;</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># chage --inactive &lt;days&gt; &lt;user&gt;</code></pre>



<h4>2.8 第 8 段内容：用户的失效日期</h4>



<h5>2.8.1 内容的含义</h5>



<p>用户的失效日期于 1970 年 1 月 1 日相距的天数</p>



<h5>2.8.2 查看命令</h5>



<pre class="wp-block-code"><code># egrep ^&#91;^:]+:&#91;^\!*] /etc/shadow | cut -d: -f1,8</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># chage -l &lt;user&gt; | grep 'Account expires'</code></pre>



<h5>2.8.3 修改密码</h5>



<pre class="wp-block-code"><code># chage -E &lt;date&gt; &lt;user&gt;</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># chage --expiredate &lt;date&gt; &lt;user&gt;</code></pre>



<h4>2.9 第 9 段内容：保留</h4>



<p>这是一个保留位，目前没有作用</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[排错] Linux 解决执行 service crond status 命令时，报错 “crond dead but pid file exists”</title>
		<link>https://eternalcenter-sep-2022.github.io/debug-crond-dead-but-pid-file-exists/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Wed, 07 Sep 2022 13:28:06 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=28199</guid>

					<description><![CDATA[报错代码： 解决方法： 步骤一：找到 crond.pid 文件 步骤二：删除 crond.pid 文件]]></description>
										<content:encoded><![CDATA[
<h2>报错代码：</h2>



<pre class="wp-block-code"><code>crond dead but pid file exists</code></pre>



<h2>解决方法：</h2>



<h3>步骤一：找到 crond.pid 文件</h3>



<pre class="wp-block-code"><code># find / -name cron*
/spool/anacron/cron.daily
/spool/anacron/cron.weekly
/spool/anacron/cron.monthly
/spool/cron
/lock/subsys/crond
/run/cron.reboot
/run/crond.pid</code></pre>



<h3>步骤二：删除 crond.pid 文件</h3>



<pre class="wp-block-code"><code># rm -rf crond.pid</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[排错] openSUSE &#038; SUSE 解决执行 systemctl enable 命令或者 systemd-sysv-install enable 命令时报错 “&#8230;..: No such file or directory”</title>
		<link>https://eternalcenter-sep-2022.github.io/no-such-file-or-directory/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 15 Aug 2022 03:08:13 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System Software (系统软件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=27547</guid>

					<description><![CDATA[报错代码 解决方法]]></description>
										<content:encoded><![CDATA[
<h2>报错代码</h2>



<pre class="wp-block-code"><code>......: No such file or directory</code></pre>



<h2>解决方法</h2>



<pre class="wp-block-code"><code># zypper in insserv-compat</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] /etc/resolv.conf 配置文件的 search 选项</title>
		<link>https://eternalcenter-sep-2022.github.io/etc-resolv-conf-search/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Wed, 10 Aug 2022 15:07:19 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[DNS]]></category>
		<category><![CDATA[Other Service (其它服务)]]></category>
		<category><![CDATA[Service (服务)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Network (系统网络)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=27527</guid>

					<description><![CDATA[内容一：测试 search 选项的配置 内容二：测试 search 选项 2.1 查询 zhumingyu （补充：当查询 zhumingyu 时，也就是中间没有点 “.”，则默认会被视为查询主机名，会先依次把 eternalcenter.com、local 和 new 作为后缀添加到 zhumingyu 后进行查询，最后才查询 zhumingyu） 2.2 zhumingyu.com （补充：当查询 zhumingyu.com 时，也就是中间有 1 个点 “.”，则默认会被视为查询域名，会先查询 mingyuzhu.com，如果查询失败，则会先依次把 eternalcenter.com、local 和 new 作为后缀添加到 zhumingyu 后进行查询） 2.3 查询 zhumingyu.com. （补充：当查询 zhumingyu.com. 时，也就是末尾有 1 个点 “.”，默认会被视为查询域名，且只会查询这个域名。不会查询 search 里的每 1 项）]]></description>
										<content:encoded><![CDATA[
<h3>内容一：测试 search 选项的配置</h3>



<pre class="wp-block-code"><code># cat /etc/resolv.conf
search eternalcenter.com local new
nameserver 8.8.8.8</code></pre>



<h3>内容二：测试 search 选项</h3>



<h4>2.1 查询 zhumingyu</h4>



<pre class="wp-block-code"><code># host -a zhumingyu
Trying "zhumingyu.eternalcenter.com"
Trying "zhumingyu.local"
Trying "zhumingyu.new"
Trying "zhumingyu"
Host zhumingyu not found: 3(NXDOMAIN)
Received 102 bytes from 8.8.8.8#53 in 62 ms</code></pre>



<p>（补充：当查询 zhumingyu 时，也就是中间没有点 “.”，则默认会被视为查询主机名，会先依次把 eternalcenter.com、local 和 new 作为后缀添加到 zhumingyu 后进行查询，最后才查询 zhumingyu）</p>



<h4>2.2 zhumingyu.com</h4>



<pre class="wp-block-code"><code># host -a zhumingyu.com
Trying "zhumingyu.com"
Received 31 bytes from 1.1.1.1#53 in 217 ms
Trying "zhumingyu.com.eternalcenter.com"
Trying "zhumingyu.com.local"
Trying "zhumingyu.com.new"
Host zhumingyu.com.new not found: 4(NOTIMP)
Received 35 bytes from 1.1.1.1#53 in 218 ms</code></pre>



<p>（补充：当查询 zhumingyu.com 时，也就是中间有 1 个点 “.”，则默认会被视为查询域名，会先查询 mingyuzhu.com，如果查询失败，则会先依次把 eternalcenter.com、local 和 new 作为后缀添加到 zhumingyu 后进行查询）</p>



<h4>2.3 查询 zhumingyu.com.</h4>



<pre class="wp-block-code"><code># host -a zhumingyu.com.
Trying "zhumingyu.com"
Host zhumingyu.com not found: 4(NOTIMP)
Received 31 bytes from 1.1.1.1#53 in 204 ms
Received 31 bytes from 1.1.1.1#53 in 204 ms</code></pre>



<p>（补充：当查询 zhumingyu.com. 时，也就是末尾有 1 个点 “.”，默认会被视为查询域名，且只会查询这个域名。不会查询 search 里的每 1 项）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[命令] Linux 命令 locate （查找文件）</title>
		<link>https://eternalcenter-sep-2022.github.io/locate/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 01 Aug 2022 12:50:19 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Storage (系统存储)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=27463</guid>

					<description><![CDATA[内容一：locate 命令的安装 1.1 安装 locate 命令 1.2 更新 locate 数据库 （注意：如果不更新 locate 数据库，在使用 locate 命令后可能会报错 ） 内容二：locate 命令的选项 1) -b 或者 &#8211;basename 只显示使用指定模式匹配名称的条目2) -c 或者 &#8211;count 只显示找的数量3) -e 或者 &#8211;existing 只显示存在的条目4) -i 或者 &#8211;ignore-case 查找时忽略大小写5) -r 或者 &#8211;regexp 使用正则表达式6) &#8211;regex 使用扩展正则表达式 内容三：locate 命令的案例 3.1 案例一：查找包含 passwd 的文件 3.2 案例二：在 /etc/ 目录下查找以 sh 开头的文件 3.3 案例三：在当前目录下查找以 &#8230; <p class="link-more"><a href="https://eternalcenter-sep-2022.github.io/locate/" class="more-link">Continue reading<span class="screen-reader-text"> "[命令] Linux 命令 locate （查找文件）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3>内容一：locate 命令的安装</h3>



<h4>1.1 安装 locate 命令</h4>



<pre class="wp-block-code"><code># dnf install mlocate</code></pre>



<h4>1.2 更新 locate 数据库</h4>



<pre class="wp-block-code"><code># updatedb</code></pre>



<p>（<br>注意：如果不更新 locate 数据库，在使用 locate 命令后可能会报错</p>



<pre class="wp-block-code"><code>locate: can not stat () `/var/lib/mlocate/mlocate.db': No such file or directory</code></pre>



<p>）</p>



<h3>内容二：locate 命令的选项</h3>



<p>1) -b 或者 &#8211;basename 只显示使用指定模式匹配名称的条目<br>2) -c 或者 &#8211;count 只显示找的数量<br>3) -e 或者 &#8211;existing 只显示存在的条目<br>4) -i 或者 &#8211;ignore-case 查找时忽略大小写<br>5) -r 或者 &#8211;regexp 使用正则表达式<br>6) &#8211;regex 使用扩展正则表达式</p>



<h3>内容三：locate 命令的案例</h3>



<h4>3.1 案例一：查找包含 passwd 的文件</h4>



<pre class="wp-block-code"><code># locate passwd</code></pre>



<h4>3.2 案例二：在 /etc/ 目录下查找以 sh 开头的文件</h4>



<pre class="wp-block-code"><code># locate /etc/sh</code></pre>



<h4>3.3 案例三：在当前目录下查找以 r 开头的文件并忽略大小写</h4>



<pre class="wp-block-code"><code># locate -i ~/r</code></pre>



<h4>3.4 案例四：使用正则表达式超找包含 1.txt 或 2.txt 的文件</h4>



<pre class="wp-block-code"><code># locate -r &#91;1-2].txt</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[命令] Linux 命令 modprobe、rmmod、insmod、lsmod、modinfo 的使用 （管理模块）</title>
		<link>https://eternalcenter-sep-2022.github.io/modprobe-rmmod-insmod-lsmod-modinfo/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 01 Aug 2022 06:10:32 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System Software (系统软件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=27461</guid>

					<description><![CDATA[内容一：modprobe 命令的选项 1) -a 或者 &#8211;all，载入所有模块2) -c 或者 &#8211;show-conf 显示所有模块的配置信息3) -r 或者 &#8211;remove 卸载模块，必须在模块闲置不用时操作。4) -v 或者 &#8211;verbose 显示执行时的详细信息5) -V 或者 &#8211;version 显示命令的版本信息6) -h 或者 &#8211;help 显示命令的帮助信息 内容二：modprobe、insmod、rmmod、lsmod、modinfo 命令的案例 2.1 案例一：安装模块 或者： 2.2 案例二：删除模块 或者： 2.3 案例三：显示所有模块 2.4 案例四：显示某 1 个模块的详细信息]]></description>
										<content:encoded><![CDATA[
<h3>内容一：modprobe 命令的选项</h3>



<p>1) -a 或者 &#8211;all，载入所有模块<br>2) -c 或者 &#8211;show-conf 显示所有模块的配置信息<br>3) -r 或者 &#8211;remove 卸载模块，必须在模块闲置不用时操作。<br>4) -v 或者 &#8211;verbose 显示执行时的详细信息<br>5) -V 或者 &#8211;version 显示命令的版本信息<br>6) -h 或者 &#8211;help 显示命令的帮助信息</p>



<h3>内容二：modprobe、insmod、rmmod、lsmod、modinfo 命令的案例</h3>



<h4>2.1 案例一：安装模块</h4>



<pre class="wp-block-code"><code># modprobe floppy</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># insmod floppy</code></pre>



<h4>2.2 案例二：删除模块</h4>



<pre class="wp-block-code"><code># modprobe -r floppy</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># rmmod floppy</code></pre>



<h4>2.3 案例三：显示所有模块</h4>



<pre class="wp-block-code"><code># lsmod</code></pre>



<h4>2.4 案例四：显示某 1 个模块的详细信息</h4>



<pre class="wp-block-code"><code># modinfo floppy</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[命令] Linux 命令 tracepath （显示达到目的主机的路由信息）</title>
		<link>https://eternalcenter-sep-2022.github.io/tracepath/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 30 Jul 2022 14:02:31 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Network (系统网络)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=27456</guid>

					<description><![CDATA[内容一：tracepath 命令的选项 1) -n 只显示 IP 地址2) -b 同时显示 IP 地址和主机名3) -l 设置初始数据包长度，默认值为 655354) -m 设置最大 TTL 值 （允许数据包到达目主机时允许通过的最多网段数），默认值为 305) -p 指定要到达的端口 内容二：tracepath 命令的案例 2.1 显示到达主机的路由信息 （只显示主机名） 2.2 显示到达主机的路由信息 （只显示 IP 地址） 2.3 显示到达主机的路由信息 （同时显示 IP 地址和主机名）]]></description>
										<content:encoded><![CDATA[
<h3>内容一：tracepath 命令的选项</h3>



<p>1) -n 只显示 IP 地址<br>2) -b 同时显示 IP 地址和主机名<br>3) -l 设置初始数据包长度，默认值为 65535<br>4) -m 设置最大 TTL 值 （允许数据包到达目主机时允许通过的最多网段数），默认值为 30<br>5) -p 指定要到达的端口</p>



<h3>内容二：tracepath 命令的案例</h3>



<h4>2.1 显示到达主机的路由信息 （只显示主机名）</h4>



<pre class="wp-block-code"><code># tracepath eternalcenter.com
 1?: &#91;LOCALHOST]                      pmtu 1500
 1:  eternalcenter.com                                   190.114ms !H
 1:  eternalcenter.com                                   187.738ms !H
     Resume: pmtu 1500 </code></pre>



<h4>2.2 显示到达主机的路由信息 （只显示 IP 地址）</h4>



<pre class="wp-block-code"><code># tracepath -n eternalcenter.com
 1?: &#91;LOCALHOST]                      pmtu 1500
 1:  143.198.58.97                                       188.327ms !H
 1:  143.198.58.97                                       186.518ms !H
     Resume: pmtu 1500 </code></pre>



<h4>2.3 显示到达主机的路由信息 （同时显示 IP 地址和主机名）</h4>



<pre class="wp-block-code"><code># tracepath -b eternalcenter.com
 1?: &#91;LOCALHOST]                      pmtu 1500
 1:  eternalcenter.com (143.198.58.97)                   194.175ms !H
 1:  eternalcenter.com (143.198.58.97)                   188.484ms !H
     Resume: pmtu 1500 </code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux 文件 profile 和 bashrc （用户登录环境的设置）</title>
		<link>https://eternalcenter-sep-2022.github.io/profile-bashrc/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 29 Jul 2022 06:43:12 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Privilege (系统权限)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<category><![CDATA[System User (系统用户)]]></category>
		<category><![CDATA[System User & System Privilege (系统用户 & 系统权限)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=27441</guid>

					<description><![CDATA[内容一：profile 文件 1.1 profile 全局文件的位置 （影响所有用户） 1.2 profile 局部文件的位置 （只影响单个用户） 或者： 或者： 1.3 profile 文件的作用 在用户登录时设置用户的环境变量，只在用户登录时才会生效 1.4 登录 Linux 时执行 profile 文件的顺序 第一步，执行： 第二步，按以下顺序一一尝试执行以下 3 个文件中的 1 个，当执行成功后则停止尝试下 1 个文件： 第三步：开始调用解释器 （如果是调用 bash 解释器，则继续执行登录 bash 时执行 bashrc 文件的顺序） 内容二：bashrc 文件 2.1 bashrc 全局文件的位置 （影响所有用户） 或者： 2.2 bashrc 局部文件的位置 （只影响单个用户） 2.3 bashrc 文件的作用 在用户使用 bash 解释器或登录 &#8230; <p class="link-more"><a href="https://eternalcenter-sep-2022.github.io/profile-bashrc/" class="more-link">Continue reading<span class="screen-reader-text"> "[内容] Linux 文件 profile 和 bashrc （用户登录环境的设置）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3>内容一：profile 文件</h3>



<h4>1.1 profile 全局文件的位置 （影响所有用户）</h4>



<pre class="wp-block-code"><code>/etc/profile</code></pre>



<h4>1.2 profile 局部文件的位置 （只影响单个用户）</h4>



<pre class="wp-block-code"><code>~/.bash_profile</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code>~/.bash_login</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code>~/.profile</code></pre>



<h4>1.3 profile 文件的作用</h4>



<p>在用户登录时设置用户的环境变量，只在用户登录时才会生效</p>



<h4>1.4 登录 Linux 时执行 profile 文件的顺序</h4>



<p>第一步，执行：</p>



<pre class="wp-block-code"><code>/etc/profile</code></pre>



<p>第二步，按以下顺序一一尝试执行以下 3 个文件中的 1 个，当执行成功后则停止尝试下 1 个文件：</p>



<pre class="wp-block-code"><code>~/.bash_profile
~/.bash_login
~/.profile</code></pre>



<p>第三步：开始调用解释器</p>



<p>（如果是调用 bash 解释器，则继续执行登录 bash 时执行 bashrc 文件的顺序）</p>



<h3>内容二：bashrc 文件</h3>



<h4>2.1 bashrc 全局文件的位置 （影响所有用户）</h4>



<pre class="wp-block-code"><code>/etc/bashrc</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code>/etc/bash.bashrc</code></pre>



<h4>2.2 bashrc 局部文件的位置 （只影响单个用户）</h4>



<pre class="wp-block-code"><code>~/.bashrc</code></pre>



<h4>2.3 bashrc 文件的作用</h4>



<p>在用户使用 bash 解释器或登录 bash 解释器时设置用户的环境变量，每次调用 bash 解释器时都会生效</p>



<h4>2.4 使用 bash 或登录 bash 时执行 bashrc 文件的顺序</h4>



<p>第一步，执行以下 2 个文件中的 1 个：</p>



<pre class="wp-block-code"><code>/etc/bashrc
/etc/bash.bashrc</code></pre>



<p>第二步，执行：</p>



<pre class="wp-block-code"><code>~/.bashrc</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[命令] Linux 命令 su （切换用户）</title>
		<link>https://eternalcenter-sep-2022.github.io/su/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 25 Jul 2022 08:33:37 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System User (系统用户)]]></category>
		<category><![CDATA[System User & System Privilege (系统用户 & 系统权限)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=27201</guid>

					<description><![CDATA[案例一：切换用户，切换后保持当前用户所在的目录，并使用当前用户的环境变量 案例二：切换用户，切换后进入被切换用户的家目录，并使用被切换用户的环境变量]]></description>
										<content:encoded><![CDATA[
<h3>案例一：切换用户，切换后保持当前用户所在的目录，并使用当前用户的环境变量</h3>



<pre class="wp-block-code"><code># su &lt;user&gt;</code></pre>



<h3>案例二：切换用户，切换后进入被切换用户的家目录，并使用被切换用户的环境变量</h3>



<pre class="wp-block-code"><code># su - &lt;user&gt;</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux 常用软件</title>
		<link>https://eternalcenter-sep-2022.github.io/common-software/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 18 Jul 2022 14:01:51 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Software (系统软件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=27074</guid>

					<description><![CDATA[bash-completion 作用：用于使用 tab 键补全命令 安装方法： 或者： redhat-lsb-core 作用：可以在 CentOS Linux &#38; RHEL 上显示系统版本信息 安装方法： 或者： lsb-release 作用：可以在 openSUSE &#38; SLE 上显示系统版本信息 安装方法： vim-enhanced 作用：可以使用 vim 命令编辑文档 安装方法： 或者： xorg-x11-xauth.x86_64 和 xorg-x11-fonts-* 作用：让需要图形化环境的软件可以启动 安装方法： 或者：]]></description>
										<content:encoded><![CDATA[
<h3>bash-completion</h3>



<p>作用：用于使用 tab 键补全命令</p>



<p>安装方法：</p>



<pre class="wp-block-code"><code># yum install bash-completion</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># dnf install bash-completion</code></pre>



<h3>redhat-lsb-core</h3>



<p>作用：可以在 CentOS Linux &amp; RHEL 上显示系统版本信息</p>



<p>安装方法：</p>



<pre class="wp-block-code"><code># yum install redhat-lsb-core</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># dnf install redhat-lsb-core</code></pre>



<h3>lsb-release</h3>



<p>作用：可以在 openSUSE &amp; SLE 上显示系统版本信息</p>



<p>安装方法：</p>



<pre class="wp-block-code"><code># zypper install lsb-release</code></pre>



<h3>vim-enhanced</h3>



<p>作用：可以使用 vim 命令编辑文档</p>



<p>安装方法：</p>



<pre class="wp-block-code"><code># yum install vim-enhanced</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># dnf install vim-enhanced</code></pre>



<h3>xorg-x11-xauth.x86_64 和 xorg-x11-fonts-*</h3>



<p>作用：让需要图形化环境的软件可以启动</p>



<p>安装方法：</p>



<pre class="wp-block-code"><code># yum install xorg-x11-xauth.x86_64; yum install xorg-x11-fonts-*</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># dnf install xorg-x11-xauth.x86_64; dnf install xorg-x11-fonts-*</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] audit 的设置 （日志保存时间）</title>
		<link>https://eternalcenter-sep-2022.github.io/audit-log-save-time/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 18 Jul 2022 01:45:08 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[Service (服务)]]></category>
		<category><![CDATA[SFTP]]></category>
		<category><![CDATA[Storage Service (存储服务)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Directory (系统目录)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System General Log (系统普通日志)]]></category>
		<category><![CDATA[System Log (系统日志)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Privilege Security (系统权限安全)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Security Log (系统安全日志)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System Storage (系统存储)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=26972</guid>

					<description><![CDATA[方法一：通过 audit 配置文件设置 1.1 设置 audit 日志的保存时间 确保部分内容如下： （补充：这里以1) 开启 audit 日志 （local_events = yes） （write_logs = yes）2) 将 audit 日志写入 /var/log/audit/audit.log 文件 （log_file = /var/log/audit/audit.log）3) audit 日志每达到 8M 大小就将旧的 audit 日志进行备份并创建新的 audit 日志 （max_log_file = 8） （max_log_file_action = ROTATE），也可以修改成： max_log_file_action = keep_logs4) 旧的 audit 日志保存 5 份 （num_logs =5）为例） 1.2 让设置的 audit 时间生效 方法二：通过 &#8230; <p class="link-more"><a href="https://eternalcenter-sep-2022.github.io/audit-log-save-time/" class="more-link">Continue reading<span class="screen-reader-text"> "[步骤] audit 的设置 （日志保存时间）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3>方法一：通过 audit 配置文件设置</h3>



<h4>1.1 设置 audit 日志的保存时间</h4>



<pre class="wp-block-code"><code># vim /etc/audit/auditd.conf</code></pre>



<p>确保部分内容如下：</p>



<pre class="wp-block-code"><code>......
local_events = yes
......
write_logs = yes
......
log_file = /var/log/audit/audit.log
......
max_log_file = 8
......
num_logs =5
......
max_log_file_action = ROTATE
......</code></pre>



<p>（<br>补充：这里以<br>1) 开启 audit 日志 （local_events = yes） （write_logs = yes）<br>2) 将 audit 日志写入 /var/log/audit/audit.log 文件 （log_file = /var/log/audit/audit.log）<br>3) audit 日志每达到 8M 大小就将旧的 audit 日志进行备份并创建新的 audit 日志 （max_log_file = 8） （max_log_file_action = ROTATE），也可以修改成： max_log_file_action = keep_logs<br>4) 旧的 audit 日志保存 5 份 （num_logs =5）<br>为例<br>）</p>



<h4>1.2 让设置的 audit 时间生效</h4>



<pre class="wp-block-code"><code># service auditd restart</code></pre>



<h3>方法二：通过 logrotate 配置文件设置</h3>



<h4>2.1 设置 audit 日志的保存时间</h4>



<pre class="wp-block-code"><code># vim /etc/logrotate.d/auditd</code></pre>



<p>创建以下内容：</p>



<pre class="wp-block-code"><code>/var/log/audit/*
{
rotate 30
daily
missingok
compress
delaycompress
postrotate
touch /var/log/audit/audit.log ||:
chmod 0600 /var/log/audit/audit.log ||:
service auditd restart
endscript
}</code></pre>



<p>（<br>补充：这里以：<br>1) 备份的日志文件保留 30 份 （rotate 30）<br>2) 每天将现在的日志文件进行备份并生成新的日志文件 （dayly）<br>）</p>



<h4>2.2 让设置的 audit 时间生效</h4>



<pre class="wp-block-code"><code># systemctl restart logrotate.service</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[命令] Linux 命令 uname （显示系统信息）</title>
		<link>https://eternalcenter-sep-2022.github.io/uname/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 15 Jul 2022 08:13:46 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Computer & System Hardware & System Installation & System Upgradation (系统电脑 & 系统硬件 & 系统安装 & 系统升级)]]></category>
		<category><![CDATA[System Hardware (系统硬件)]]></category>
		<category><![CDATA[System Installation (系统安装)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=26799</guid>

					<description><![CDATA[内容一：uname 命令的格式 内容二：uname 命令的选项 1) -a 或者 &#8211;all，显示所有系统信息 （补充：如果系统处理器类型和系统硬件平台处于未知状态则不显示） 2) -s 或者 &#8211;kernel-name，显示系统内核3) -n 或者 &#8211;nodename，显示系统节点名称4) -r 或者 &#8211;kernel-release，显示系统内核发布版本5) -m 或者 &#8211;machine，显示系统硬件名称6) -p 或者 &#8211;processor，显示系统处理器类型7) -i 或者 &#8211;hardware-platform，显示系统硬件平台8) &#8211;help，显示帮助信息9) &#8211;version，显示 uname 命令版本]]></description>
										<content:encoded><![CDATA[
<h3>内容一：uname 命令的格式</h3>



<pre class="wp-block-code"><code># uname &lt;option&gt;</code></pre>



<h3>内容二：uname 命令的选项</h3>



<p>1) -a 或者 &#8211;all，显示所有系统信息</p>



<p>（补充：如果系统处理器类型和系统硬件平台处于未知状态则不显示）</p>



<p>2) -s 或者 &#8211;kernel-name，显示系统内核<br>3) -n 或者 &#8211;nodename，显示系统节点名称<br>4) -r 或者 &#8211;kernel-release，显示系统内核发布版本<br>5) -m 或者 &#8211;machine，显示系统硬件名称<br>6) -p 或者 &#8211;processor，显示系统处理器类型<br>7) -i 或者 &#8211;hardware-platform，显示系统硬件平台<br>8) &#8211;help，显示帮助信息<br>9) &#8211;version，显示 uname 命令版本</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[排错] 解决 Linux 普通用户执行 ping 命令时报错 “ping: socket: Address family not supported by protocol” 或者 “Error: ping: socket: Operation not permitted”</title>
		<link>https://eternalcenter-sep-2022.github.io/ping-socket-address-family-not-supported-by-protocol-or-error-ping-socket-operation-not-permitted/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 15 Jul 2022 07:07:51 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Network (系统网络)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System User (系统用户)]]></category>
		<category><![CDATA[System User & System Privilege (系统用户 & 系统权限)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=26796</guid>

					<description><![CDATA[解决方法一：修改 net.ipv4.ping_group_range 参数 1.1 确认文件功能没有参数 （补充：确认没有输出结果） 1.2 修改 net.ipv4.ping_group_range 参数 解决方法二：设置文件功能参数 2.1 设置文件功能参数 2.2 确认文件功能参数已经设置]]></description>
										<content:encoded><![CDATA[
<h3>解决方法一：修改 net.ipv4.ping_group_range 参数</h3>



<h4>1.1 确认文件功能没有参数</h4>



<pre class="wp-block-code"><code># getcap /usr/bin/ping</code></pre>



<p>（补充：确认没有输出结果）</p>



<h4>1.2 修改 net.ipv4.ping_group_range 参数</h4>



<pre class="wp-block-code"><code># sysctl net.ipv4.ping_group_range="0 2147483647"</code></pre>



<h3>解决方法二：设置文件功能参数</h3>



<h4>2.1 设置文件功能参数</h4>



<pre class="wp-block-code"><code># setcap cap_net_raw+eip /usr/bin/ping</code></pre>



<h4>2.2 确认文件功能参数已经设置</h4>



<pre class="wp-block-code"><code># getcap /usr/bin/ping
/usr/bin/ping = cap_net_raw+eip</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] Linux 非 root 用户 ping 命令使用的禁止和允许</title>
		<link>https://eternalcenter-sep-2022.github.io/non-root-user-ping-diable-enable/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 15 Jul 2022 07:00:36 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network (系统网络)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System User (系统用户)]]></category>
		<category><![CDATA[System User & System Privilege (系统用户 & 系统权限)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=26794</guid>

					<description><![CDATA[步骤一：禁止非 root 用户使用 ping 步骤二：允许非 root 用户使用 ping 补充：当禁止禁止非 root 用户使用 ping 时，非 root 用户使用 ping 命令的报错 如果是 Rocky Linux &#38; RHEL： 如果是 openSUSE &#38; SLE：]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：禁止非 root 用户使用 ping</h3>



<pre class="wp-block-code"><code>#  sysctl net.ipv4.ping_group_range="1 0"</code></pre>



<h3>步骤二：允许非 root 用户使用 ping</h3>



<pre class="wp-block-code"><code># sysctl net.ipv4.ping_group_range="0 2147483647"</code></pre>



<h3>补充：当禁止禁止非 root 用户使用 ping 时，非 root 用户使用 ping 命令的报错</h3>



<p>如果是 Rocky Linux &amp; RHEL：</p>



<pre class="wp-block-code"><code>ping: socket: Address family not supported by protocol</code></pre>



<p>如果是 openSUSE &amp; SLE：</p>



<pre class="wp-block-code"><code>Error: ping: socket: Operation not permitted</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[命令] Linux 命令 timeout （指定命令执行的时间）</title>
		<link>https://eternalcenter-sep-2022.github.io/timeout/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 11 Jul 2022 13:50:18 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=26749</guid>

					<description><![CDATA[内容一：timeout 命令的格式 内容二：timeout 命令的选项和持续时间的单位 2.1 timeout 命令的选项 1) -k 当达到命令结束的时间没有结束时，再经过指定时间后结束命令2) &#8211;foreground 后台执行命令3) &#8211;help 显示帮助信息4) -s 或者 &#8211;signal=，在超时时发送信号，通过 “kill -l” 命令可以显示信号列表5) &#8211;version 显示版本信息 2.2 timeout 命令的持续时间的单位 1) s，秒 （默认）2) m，分3) h，时4) d，天 内容三：timeout 命令的案例 3.1 案例一：执行 10 秒钟 top 命令 3.2 案例二：执行 1 小时 ping 命令，并在结束命令时发送 SIGKILL 信号 3.3 案例三：执行 1 分钟 top 命令，如果 1 分钟后命令没有停止，则再过 &#8230; <p class="link-more"><a href="https://eternalcenter-sep-2022.github.io/timeout/" class="more-link">Continue reading<span class="screen-reader-text"> "[命令] Linux 命令 timeout （指定命令执行的时间）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3>内容一：timeout 命令的格式</h3>



<pre class="wp-block-code"><code># timeout &lt;option&gt; &lt;duration&gt; &lt;command&gt;</code></pre>



<h3>内容二：timeout 命令的选项和持续时间的单位</h3>



<h4>2.1 timeout 命令的选项</h4>



<p>1) -k 当达到命令结束的时间没有结束时，再经过指定时间后结束命令<br>2) &#8211;foreground 后台执行命令<br>3) &#8211;help 显示帮助信息<br>4) -s 或者 &#8211;signal=，在超时时发送信号，通过 “kill -l” 命令可以显示信号列表<br>5) &#8211;version 显示版本信息</p>



<h4>2.2 timeout 命令的持续时间的单位</h4>



<p>1) s，秒 （默认）<br>2) m，分<br>3) h，时<br>4) d，天</p>



<h3>内容三：timeout 命令的案例</h3>



<h4>3.1 案例一：执行 10 秒钟 top 命令</h4>



<pre class="wp-block-code"><code># timeout 10 top</code></pre>



<h4>3.2 案例二：执行 1 小时 ping 命令，并在结束命令时发送 SIGKILL 信号</h4>



<pre class="wp-block-code"><code># timeout -s SIGKILL 1h ping eternalcenter.com</code></pre>



<h4>3.3 案例三：执行 1 分钟 top 命令，如果 1 分钟后命令没有停止，则再过 10 秒后结束命令</h4>



<pre class="wp-block-code"><code># timeout -k 10s 1m top</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[命令] Linux 命令 systemd-analyze （显示系统和服务启动）</title>
		<link>https://eternalcenter-sep-2022.github.io/systemd-analyze/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 11 Jul 2022 01:56:29 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Performance (系统性能)]]></category>
		<category><![CDATA[System Process & System Performance (系统进程 & 系统性能)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=26662</guid>

					<description><![CDATA[内容一：显示系统启动时间 内容二：显示服务启动时间]]></description>
										<content:encoded><![CDATA[
<h3>内容一：显示系统启动时间</h3>



<pre class="wp-block-code"><code># systemd-analyze</code></pre>



<h3>内容二：显示服务启动时间</h3>



<pre class="wp-block-code"><code># systemd-analyze blame</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux 运算</title>
		<link>https://eternalcenter-sep-2022.github.io/linux-calculation/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 09 Jul 2022 15:58:42 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[Language (语言)]]></category>
		<category><![CDATA[Shell]]></category>
		<category><![CDATA[Shell Basic (基础)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=26552</guid>

					<description><![CDATA[方法一：使用 expr 命令 或者： 或者： （补充：这里以 1 加 2 等于 3 为例） 方法二：使用 let 命令 （补充：这里以 2 除以 1 等于 2 为例） 方法三：使用双括号 “(())” （补充：这里以 1 乘以 2 等于 3 为例）]]></description>
										<content:encoded><![CDATA[
<h3>方法一：使用 expr 命令</h3>



<pre class="wp-block-code"><code># a=1
# b=2
# c=`expr $a + $b`
# echo $c
3</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># a=1
# b=2
# c=$(expr $a + $b)
# echo $c
3</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># a=1
# b=2
# c=$&#91;`expr $a + $b`]
# echo $c
3</code></pre>



<p>（补充：这里以 1 加 2 等于 3 为例）</p>



<h3>方法二：使用 let 命令</h3>



<pre class="wp-block-code"><code># a=1
# b=2
# let c=b/c
# echo $c
2</code></pre>



<p>（补充：这里以 2 除以 1 等于 2 为例）</p>



<h3>方法三：使用双括号 “(())”</h3>



<pre class="wp-block-code"><code># a=1
# b=2
# c=$(($a * $b))
# echo $c
3</code></pre>



<p>（补充：这里以 1 乘以 2 等于 3 为例）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux 软件指定版本的升级或降级 （CentOS Linux 7 版） （以系统版本作为指定维度）</title>
		<link>https://eternalcenter-sep-2022.github.io/software-specified-version-upgarde-downgrade-centos-linux-7/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 08 Jul 2022 16:00:29 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System and System Software's Update and Patch (系统和系统软件的更新和补丁)]]></category>
		<category><![CDATA[System Computer & System Hardware & System Installation & System Upgradation (系统电脑 & 系统硬件 & 系统安装 & 系统升级)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Software (系统软件)]]></category>
		<category><![CDATA[System Upgradation (系统升级)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=26495</guid>

					<description><![CDATA[内容一：将软件降级到某个版本 （补充：这里以将 openssh 软件升级到 CentOS Linux 7.6 系统版本里的最新版本为例为例） 或者： （补充：这里以将 openssh 软件升级到 CentOS Linux 7.6 系统版本里的最新版本为例为例） 内容二：将软件降级到某个版本 （补充：这里以将 openssh 软件降级到 CentOS Linux 7.6 系统版本里的最新版本为例为例）]]></description>
										<content:encoded><![CDATA[
<h3>内容一：将软件降级到某个版本</h3>



<pre class="wp-block-code"><code># yum --disablerepo='*' --enablerepo='C7.6*' update openssh</code></pre>



<p>（补充：这里以将 openssh 软件升级到 CentOS Linux 7.6 系统版本里的最新版本为例为例）</p>



<p>或者：</p>



<pre class="wp-block-code"><code># yum --disablerepo='*' --enablerepo='C7.6*' upgrade openssh</code></pre>



<p>（补充：这里以将 openssh 软件升级到 CentOS Linux 7.6 系统版本里的最新版本为例为例）</p>



<h3>内容二：将软件降级到某个版本</h3>



<pre class="wp-block-code"><code># yum --disablerepo='*' --enablerepo='C7.6*' downgrade openssh</code></pre>



<p>（补充：这里以将 openssh 软件降级到 CentOS Linux 7.6 系统版本里的最新版本为例为例）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] Linux 系统指定版本的升级 （CentOS Linux 7 版）</title>
		<link>https://eternalcenter-sep-2022.github.io/system-specified-version-upgarde-centos-linux-7/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 08 Jul 2022 15:50:03 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System and System Software's Update and Patch (系统和系统软件的更新和补丁)]]></category>
		<category><![CDATA[System Computer & System Hardware & System Installation & System Upgradation (系统电脑 & 系统硬件 & 系统安装 & 系统升级)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Software (系统软件)]]></category>
		<category><![CDATA[System Upgradation (系统升级)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=26491</guid>

					<description><![CDATA[步骤一：安装其他版本软件源 1.1 安装 centos-release 1.2 查看当前所有软件源 或者： 步骤二：清除 yum 缓存 2.1 除 yum 缓存 2.2 删除 yum 缓存目录 步骤三：将系统或软件升级到指定版本 3.1 方案一：将整个系统升级到指定版本 （补充：这里以将整个系统升级到 CentOS Linux 7.6 版本为例） （注意：系统中其他所有软件都会升级到 CentOS Linux 7.6 系统版本中的最新版本） 或者： （补充：这里以将整个系统升级到 CentOS Linux 7.6 版本为例） （注意：系统中其他所有软件都会升级到 CentOS Linux 7.6 系统版本中的最新版本） 3.2 方案二：只将系统内核或某个软件升级到指定版本 （补充：这里以只将系统内核 kernel 升级到 CentOS Linux 7.6 系统版本里的最新版本为例） 或者： （补充：这里以只将系统内核 kernel 升级到 &#8230; <p class="link-more"><a href="https://eternalcenter-sep-2022.github.io/system-specified-version-upgarde-centos-linux-7/" class="more-link">Continue reading<span class="screen-reader-text"> "[步骤] Linux 系统指定版本的升级 （CentOS Linux 7 版）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：安装其他版本软件源</h3>



<h4>1.1 安装 centos-release</h4>



<pre class="wp-block-code"><code># yum install centos-release</code></pre>



<h4>1.2 查看当前所有软件源</h4>



<pre class="wp-block-code"><code># yum repolist all</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># cat /etc/yum.repos.d/CentOS-Vault.repo</code></pre>



<h3>步骤二：清除 yum 缓存</h3>



<h4>2.1 除 yum 缓存</h4>



<pre class="wp-block-code"><code># yum clean all</code></pre>



<h4>2.2 删除 yum 缓存目录</h4>



<pre class="wp-block-code"><code># rm -rf /var/cache/yum</code></pre>



<h3>步骤三：将系统或软件升级到指定版本</h3>



<h4>3.1 方案一：将整个系统升级到指定版本</h4>



<pre class="wp-block-code"><code># yum --disablerepo='*' --enablerepo='C7.6*' update</code></pre>



<p>（补充：这里以将整个系统升级到 CentOS Linux 7.6 版本为例）</p>



<p>（注意：系统中其他所有软件都会升级到 CentOS Linux 7.6 系统版本中的最新版本）</p>



<p>或者：</p>



<pre class="wp-block-code"><code># yum --disablerepo='*' --enablerepo='C7.6*' upgrade</code></pre>



<p>（补充：这里以将整个系统升级到 CentOS Linux 7.6 版本为例）</p>



<p>（注意：系统中其他所有软件都会升级到 CentOS Linux 7.6 系统版本中的最新版本）</p>



<h4>3.2 方案二：只将系统内核或某个软件升级到指定版本</h4>



<pre class="wp-block-code"><code># yum --disablerepo='*' --enablerepo='C7.6*' update kernel</code></pre>



<p>（补充：这里以只将系统内核 kernel 升级到 CentOS Linux 7.6 系统版本里的最新版本为例）</p>



<p>或者：</p>



<pre class="wp-block-code"><code># yum --disablerepo='*' --enablerepo='C7.6*' upgrade kernel</code></pre>



<p>（补充：这里以只将系统内核 kernel 升级到 CentOS Linux 7.6 系统版本里的最新版本为例）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux SSL 证书 KEY 私钥密码的添加 （OpenSSL 版）</title>
		<link>https://eternalcenter-sep-2022.github.io/ssl-password-openssl/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 08 Jul 2022 10:00:50 +0000</pubDate>
				<category><![CDATA[Apache]]></category>
		<category><![CDATA[Basic Guidelines for Website building (网站建设基础指南)]]></category>
		<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[Django Service (服务)]]></category>
		<category><![CDATA[Nginx]]></category>
		<category><![CDATA[Nginx Security (安全)]]></category>
		<category><![CDATA[Personal Website Building (个人网站建设)]]></category>
		<category><![CDATA[Project (项目)]]></category>
		<category><![CDATA[Service (服务)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Port Security (系统端口安全)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[Tomcat]]></category>
		<category><![CDATA[Web Application Firewall (WAF)]]></category>
		<category><![CDATA[Website Service (网站服务)]]></category>
		<guid isPermaLink="false">https://eternalcenter-sep-2022.github.io/?p=26489</guid>

					<description><![CDATA[内容一：给 SSL 证书 KEY 私钥添加密码 交互式给 SSL 证书 KEY 私钥添加密码 （补充：这里以给 eternalcenter.com.key） 内容二：取消 SSL 证书 KEY 私钥添加密码 2.1 交互式取消 SSL 证书 KEY 私钥添加密码 2.2 非交互式取消 SSL 证书 KEY 私钥添加密码]]></description>
										<content:encoded><![CDATA[
<h3>内容一：给 SSL 证书 KEY 私钥添加密码</h3>



<p>交互式给 SSL 证书 KEY 私钥添加密码</p>



<pre class="wp-block-code"><code># openssl rsa -des -in eternalcenter.com.key -out one.eternalcenter.com.key</code></pre>



<p>（补充：这里以给 eternalcenter.com.key）</p>



<h3>内容二：取消 SSL 证书 KEY 私钥添加密码</h3>



<h4>2.1 交互式取消 SSL 证书 KEY 私钥添加密码</h4>



<pre class="wp-block-code"><code># openssl rsa -in one.eternalcenter.com.key -out two.eternalcenter.com.key</code></pre>



<h4>2.2 非交互式取消 SSL 证书 KEY 私钥添加密码</h4>



<pre class="wp-block-code"><code># openssl rsa -in one.eternalcenter.com.key -passin pass:eternalcenter -out two.eternalcenter.com.key</code></pre>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
